*SpaceVim.txt*	

                                                                          
    /######                                     /##    /##/##             
   /##__  ##                                   | ##   | #|__/             
  | ##  \__/ /######  /######  /####### /######| ##   | ##/##/######/#### 
  |  ###### /##__  ##|____  ##/##_____//##__  #|  ## / ##| #| ##_  ##_  ## 
   \____  #| ##  \ ## /######| ##     | ########\  ## ##/| #| ## \ ## \ ## 
   /##  \ #| ##  | ##/##__  #| ##     | ##_____/ \  ###/ | #| ## | ## | ## 
  |  ######| #######|  ######|  ######|  #######  \  #/  | #| ## | ## | ## 
   \______/| ##____/ \_______/\_______/\_______/   \_/   |__|__/ |__/ |__/ 
           | ##                                                           
           | ##                                                           
           |__/                                                           
wsdjeg                                                   *spacevim* *SpaceVim*

==============================================================================
目录                                                        *SpaceVim-contents*
  1. 简介.....................................................|SpaceVim-intro|
  2. 配置...........................................|SpaceVim-config|
  3. 命令..............................................|SpaceVim-commands|
  4. 函数............................................|SpaceVim-functions|
  5. 模块..................................................|SpaceVim-layers|
      1. 默认模块............................................|SpaceVim-default|
      2. 自动补全..................................|SpaceVim-autocomplete|
      3. 语法检查....................................|SpaceVim-layer-checkers|
      4. 颜色主题....................................|SpaceVim-colorscheme|
      5. 标签栏............................|SpaceVim-layer-core-tabline|
      6. 正则折叠....................................|SpaceVim-layer-exprfold|
      7. 格式化..............................................|SpaceVim-format|
      8. 实时检索..................................|SpaceVim-layer-incsearch|
      9. 对齐移动................................|SpaceVim-layer-indentmove|
      10. lang#c.......................................|SpaceVim-layer-lang-c|
      11. lang#crystal...........................|SpaceVim-layer-lang-crystal|
      12. lang#elixir.............................|SpaceVim-layer-lang-elixir|
      13. lang#go.....................................|SpaceVim-layer-lang-go|
      14. lang#java.................................|SpaceVim-layer-lang-java|
      15. lang#julia...............................|SpaceVim-layer-lang-julia|
      16. lang#kotlin.............................|SpaceVim-layer-lang-kotlin|
      17. lang#lua...................................|SpaceVim-layer-lang-lua|
      18. lang#ocaml...............................|SpaceVim-layer-lang-ocaml|
      19. lang#php...................................|SpaceVim-layer-lang-php|
      20. lang#pony.................................|SpaceVim-layer-lang-pony|
      21. lang#puppet.............................|SpaceVim-layer-lang-puppet|
      22. lang#python.............................|SpaceVim-layer-lang-python|
      23. lang#rust.................................|SpaceVim-layer-lang-rust|
      24. lang#scala...............................|SpaceVim-layer-lang-scala|
      25. lang#tmux.................................|SpaceVim-layer-lang-tmux|
      26. lang#xml...................................|SpaceVim-layer-lang-xml|
      27. operator...................................|SpaceVim-layer-operator|
      28. 终端.........................................|SpaceVim-layer-shell|
      29. tmux...........................................|SpaceVim-layer-tmux|
  6. API........................................................|SpaceVim-api|
      1. 命令行目录..................................|SpaceVim-api-cmdlinemenu|
      2. data#list....................................|SpaceVim-api-data-list|
      3. 命令行prompt.....................................|SpaceVim-api-prompt|
      4. sid............................................|SpaceVim-api-vim-sid|
      5. vim#message................................|SpaceVim-api-vim-message|
  7. FAQ........................................................|SpaceVim-faq|

==============================================================================
简介                                                  *SpaceVim-intro*

SpaceVim 是一个社区驱动的 vim 配置，以模块的方式组织插件和配置，这一思想来源于 spacemacs.
通过模块来管理插件可以为用户节省很多搜索插件和配置插件的时间.


==============================================================================
配置                                                          *SpaceVim-config*

SpaceVim 使用 `~/.SpaceVim.d/init.vim` 作为默认的全局配置文件. 你可以在其中设置所有的
SpaceVim 模块和变量. 同时 `~/.SpaceVim.d/` 将被加入 vim 的 runtimepath, 因此，你可以
在其中添加自己的脚本，具体的格式详见 |runtimepath|. SpaceVim 同时支持正对当前项目的局部
设置，你可以在自己的项目根目录添加 `.SpaceVim.d/init.vim`, 同样的 `.SpaceVim.d/` 也会
被加入到 vim 的runtimepath.


                                                    *g:spacevim_default_indent*
改变 SpaceVim 默认的对齐宽度. 默认是 2.
>
  let g:spacevim_default_indent = 2
<

                                                   *g:spacevim_relativenumber*
启用/禁用 相对行号，默认情况下是启用的，在窗口左侧，你可以看到相对行号，即为相对于本行的行号，
便于上下多行移动光标.


                                                       *g:spacevim_max_column*
Change the max number of columns for SpaceVim. Default is 120.
>
  let g:spacevim_max_column = 120
<

                                                 *g:spacevim_enable_guicolors*
启用/禁用 终端真色彩，默认情况下是启用的，颜色更加细腻，但需要确保你的终端支持真色彩，如果
你的终端不支持真色彩，可以禁用此选项.
>
  let g:spacevim_enable_guicolors = 1
<

                                             *g:spacevim_enable_googlesuggest*
Enable/Disable Google suggestions for neocomplete. Default is 0.
>
  let g:spacevim_enable_googlesuggest = 1
<

                                                   *g:spacevim_windows_leader*
Window functions leader for SpaceVim. Default is `s`.  Set to empty to disable
this feature, or you can set to another char.
>
  let g:spacevim_windows_leader = ''
<

                                                     *g:spacevim_unite_leader*
Unite work flow leader of SpaceVim. Default is `f`. Set to empty to disable
this feature, or you can set to another char.

                                                    *g:spacevim_denite_leader*
Denite work flow leader of SpaceVim. Default is `F`. Set to empty to disable
this feature, or you can set to another char.

                                             *g:spacevim_enable_insert_leader*
Enable/Disable spacevim's insert mode leader, default is enable

                                                *g:spacevim_plugin_bundle_dir*
Set the cache directory of plugins. Default is `~/.cache/vimfiles`.
>
  let g:spacevim_plugin_bundle_dir = '~/.cache/vimplugs'
<

                                            *g:spacevim_realtime_leader_guide*
Enable/Disable realtime leader guide. Default is 1. to disable it:
>
  let g:spacevim_realtime_leader_guide = 0
<

                                             *g:spacevim_enable_key_frequency*
Enable/Disable key frequency catching of SpaceVim. default value is 0. to
enable it:
>
  let g:spacevim_enable_key_frequency = 1
<

                                              *g:spacevim_autocomplete_method*
Set the autocomplete engine of spacevim, the default logic is:
>
  if has('python3')
    let g:spacevim_autocomplete_method = 'deoplete'
  elseif has('lua')
    let g:spacevim_autocomplete_method = 'neocomplete'
  elseif has('python')
    let g:spacevim_autocomplete_method = 'completor'
  elseif has('timers')
    let g:spacevim_autocomplete_method = 'asyncomplete'
  else
    let g:spacevim_autocomplete_method = 'neocomplcache'
  endif
<

                                                   *g:spacevim_enable_neomake*
SpaceVim default checker is neomake. If you want to use syntastic, use:
>
  let g:spacevim_enable_neomake = 0
<

                                                       *g:spacevim_enable_ale*
Use ale for syntax checking, disabled by default.
>
  let g:spacevim_enable_ale = 1
<

                                                          *g:spacevim_guifont*
Set the guifont of SpaceVim. Default is empty.
>
  let g:spacevim_guifont = 'DejaVu\ Sans\ Mono\ for\ Powerline\ 11'
<

                                                       *g:spacevim_enable_ycm*
Enable/Disable YouCompleteMe. Default is 0.
>
  let g:spacevim_enable_ycm = 1
<

                                                    *g:spacevim_sidebar_width*
Set the width of the SpaceVim sidebar. Default is 30. This value will be used
by tagbar and vimfiler.

                                                   *g:spacevim_snippet_engine*
Set the snippet engine of SpaceVim, default is neosnippet. to enable
ultisnips:
>
  let g:spacevim_snippet_engine = 'ultisnips'
<

                                                *g:spacevim_enable_cursorline*
Enable/Disable cursorline. Default is 1, cursorline will be highlighted in
normal mode.To disable this feature:
>
  let g:spacevim_enable_cursorline = 0
<

                                             *g:spacevim_statusline_separator*
Set the statusline separators of statusline, default is 'arrow'
>
  Separatos options:
    1. arrow
    2. curve
    3. slant
    4. nil
    5. fire
<

See more details in: http://spacevim.org/documentation/#statusline


                                         *g:spacevim_statusline_left_sections*
Define the left section of statusline in active windows. By default:
>
  let g:spacevim_statusline_left_sections =
    \ [
    \ 'winnr',
    \ 'filename',
    \ 'major mode',
    \ 'minor mode lighters',
    \ 'version control info'
    \ ]
<

                                        *g:spacevim_statusline_right_sections*
Define the right section of statusline in active windows. By default:
>
  g:spacevim_statusline_right_sections =
    \ [
    \ 'fileformat',
    \ 'cursorpos',
    \ 'percentage'
    \ ]
<

                                       *g:spacevim_statusline_unicode_symbols*
Enable/Disable unicode symbols in statusline

                                  *g:spacevim_enable_language_specific_leader*
Enable/Disable language specific leader, by default you can use `,` ket
instead of `SPC` `l`.

                                   *g:spacevim_enable_statusline_display_mode*
Enable/Disable display mode. Default is 0, mode will be displayed in
statusline. To enable this feature:
>
  let g:spacevim_enable_statusline_display_mode = 1
<

                                             *g:spacevim_custom_color_palette*
Set the statusline/tabline palette of color, default values depends on the
theme
>
  let g:spacevim_custom_color_palette = [
    \ ['#282828', '#b8bb26', 246, 235],
    \ ['#a89984', '#504945', 239, 246],
    \ ['#a89984', '#3c3836', 237, 246],
    \ ['#665c54', 241],
    \ ['#282828', '#83a598', 235, 109],
    \ ['#282828', '#fe8019', 235, 208],
    \ ['#282828', '#8ec07c', 235, 108],
    \ ]
<


                                              *g:spacevim_enable_cursorcolumn*
Enable/Disable cursorcolumn. Default is 0, cursorcolumn will be highlighted in
normal mode. To enable this feature:
>
  let g:spacevim_enable_cursorcolumn = 1
<

                                                     *g:spacevim_error_symbol*
Set the error symbol for SpaceVim's syntax maker. Default is '✖'.
>
  let g:spacevim_error_symbol = '+'
<

                                                   *g:spacevim_warning_symbol*
Set the warning symbol for SpaceVim's syntax maker. Default is '⚠'.
>
  let g:spacevim_warning_symbol = '!'
<

                                                      *g:spacevim_info_symbol*
Set the information symbol for SpaceVim's syntax maker. Default is '🛈'.
>
  let g:spacevim_info_symbol = 'i'
<

                                            *g:spacevim_terminal_cursor_shape*
Set the SpaceVim cursor shape in the terminal.
>
  0 : to prevent Nvim from changing the cursor shape.
  1 : to enable non-blinking mode-sensitive cursor.
  2 : to enable blinking mode-sensitive cursor (default).
<

>
<
Host terminal must support the DECSCUSR CSI escape sequence. Depending on the
terminal emulator, using this option with nvim under tmux might require adding
the following to ~/.tmux.conf:
>
  set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
<

                                                *g:spacevim_vim_help_language*
Set the help language of vim. Default is 'en'.  You can change it to Chinese.
>
  let g:spacevim_vim_help_language = 'cn'
<

                                                         *g:spacevim_language*
Set the message language of vim. Default is 'en_US.UTF-8'.
>
  let g:spacevim_language = 'en_CA.utf8'
<

                                                *g:spacevim_keep_server_alive*
Option for keep the spacevim server ailive

                                                      *g:spacevim_colorscheme*
The colorscheme of SpaceVim. Default is 'gruvbox'.

                                                   *g:spacevim_colorscheme_bg*
The background of colorscheme. Default is 'dark'.

                                              *g:spacevim_colorscheme_default*
The default colorscheme of SpaceVim. Default is 'desert'.  This colorscheme
will be used if the colorscheme set by  `g:spacevim_colorscheme` is not
installed.
>
  let g:spacevim_colorscheme_default = 'other_color'
<

                                                      *g:spacevim_simple_mode*
Enable/disable simple mode of SpaceVim. Default is 0. In this mode, only few
plugins will be installed.
>
  let g:spacevim_simple_mode = 1
<

                                                      *g:spacevim_filemanager*
The default file manager of SpaceVim. Default is 'vimfiler'.

                                                   *g:spacevim_plugin_manager*
The default plugin manager of SpaceVim. Default is 'dein'. Options are dein,
neobundle, or vim-plug.

                                     *g:spacevim_plugin_manager_max_processes*
Set the max process of SpaceVim plugin manager

                                                     *g:spacevim_checkinstall*
Enable/Disable checkinstall on SpaceVim startup. Default is 1.
>
  let g:spacevim_checkinstall = 1
<

                                                     *g:spacevim_enable_debug*
Enable/Disable debug mode for SpaceVim. Default is 0.
>
  let g:spacevim_enable_debug = 1
<

                                            *g:spacevim_auto_disable_touchpad*
Auto disable touchpad when switch to insert mode or focuslost in neovim.

                                                      *g:spacevim_debug_level*
Set the debug level of SpaceVim. Default is 1. see
|SpaceVim#logger#setLevel()|

                                                *g:spacevim_buffer_index_type*
Set SpaceVim buffer index type, default is 0.
>
  " types:
  " 0: 1 ➛ ➊
  " 1: 1 ➛ ➀
  " 2: 1 ➛ ⓵
  " 3: 1 ➛ ¹
  " 4: 1 ➛ 1
  let g:spacevim_buffer_index_type = 1
<

                                               *g:spacevim_windows_index_type*
Set SpaceVim windows index type, default is 0.
>
  " types:
  " 0: 1 ➛ ➊
  " 1: 1 ➛ ➀
  " 2: 1 ➛ ⓵
  " 3: 1 ➛ 1
  let g:spacevim_windows_index_type = 1
<

                                     *g:spacevim_enable_tabline_filetype_icon*
Enable/Disable tabline filetype icon. default is 0.

                                        *g:spacevim_enable_os_fileformat_icon*
Enable/Disable os fileformat icon. default is 0.


                                                  *g:spacevim_github_username*
Set the github username, It will be used for getting your starred repos, and
fuzzy find the repo you want.

                                               *g:spacevim_windows_smartclose*
Set the default key for smart close windows, default is `q`.

                                                 *g:spacevim_disabled_plugins*
Disable plugins by name.
>
  let g:spacevim_disabled_plugins = ['vim-foo', 'vim-bar']
<

                                                   *g:spacevim_custom_plugins*
Add custom plugins.
>
  let g:spacevim_custom_plugins = [
              \ ['plasticboy/vim-markdown', 'on_ft' : 'markdown'],
              \ ['wsdjeg/GitHub.vim'],
              \ ]
<

                                                   *g:spacevim_filetype_icons*
change the default filetype icon for a specific filtype.
>
  let g:spacevim_filetype_icons['md'] = ''
<

                                              *g:spacevim_force_global_config*
SpaceVim will load the global config after local config if set to 1. Default
is 0. If you have a local config, the global config will not be loaded.
>
  let g:spacevim_force_global_config = 1
<

                                           *g:spacevim_enable_powerline_fonts*
Enable/Disable powerline symbols. Default is 1.

                                                     *g:spacevim_lint_on_save*
Enable/Disable lint on save feature of SpaceVim's maker. Default is 1.
>
  let g:spacevim_lint_on_save = 0
<

                                          *g:spacevim_project_rooter_patterns*
Set the project rooter patterns, by default it is `['.git/', '_darcs/',
'.hg/', '.bzr/', '.svn/']`

                                     *g:spacevim_project_rooter_automatically*
Enable/Disable changing directory automatically. Enabled by default.

                                                  *g:spacevim_lint_on_the_fly*
Enable/Disable lint on the fly feature of SpaceVim's maker. Default is 0.
>
  let g:spacevim_lint_on_the_fly = 0
<

                                          *g:spacevim_enable_vimfiler_welcome*
Enable/Disable vimfiler in the welcome windows. Default is 1.  This will cause
vim to start up slowly if there are too many files in the current directory.
>
  let g:spacevim_enable_vimfiler_welcome = 0
<

                                        *g:spacevim_enable_vimfiler_gitstatus*
Enable/Disable gitstatus column in vimfiler buffer, default is 0.

                                     *g:spacevim_enable_vimfiler_filetypeicon*
Enable/Disable filetypeicon column in vimfiler buffer, default is 0.

                                                        *g:spacevim_hosts_url*
The host file url. This option is for Chinese users who can not use Google and
Twitter.

==============================================================================
COMMANDS                                                   *SpaceVim-commands*

:SPLayer {layers}                                                   *:SPLayer*
  Load exist layer, {layers} can be a string of a layer name, or a list of
  layer names.

:SPVersion                                                        *:SPVersion*
  Print the version of SpaceVim.  The following lines contain information
  about which features were enabled.  When there is a preceding '+', the
  feature is included, when there is a '-' it is excluded.

:SPSet {opt} [value]                                                  *:SPSet*
  Set or check SpaceVim option. {opt} should be the option name of spacevim,
  This command will use [value] as the value of option name.

:SPDebugInfo[!]                                                 *:SPDebugInfo*
  print the debug information of spacevim, [!] forces the output into a new
  buffer.

:SPConfig                                                          *:SPConfig*
  edit custom config file of SpaceVim, by default this command will open
  global custom configuration file, '-l' option will load local custom
  configuration file.
>
    :SPConfig -g
<

:SPUpdate                                                          *:SPUpdate*
  Command for update plugin, support completion of plugin name. If run without
  argv, All the plugin will be updated.
>
      :SPUpdate vim-airline
<

:SPReinstall                                                    *:SPReinstall*
  Command for reinstall plugin, support completion of plugin name.

:SPInstall                                                        *:SPInstall*
  Command for install plugins.

==============================================================================
FUNCTIONS                                                 *SpaceVim-functions*

SpaceVim#layers#load({layer})                         *SpaceVim#layers#load()*
  Load the {layer} you want. For all the layers SpaceVim supports, see
  |SpaceVim-layers|. the second argv is the layer variable.

SpaceVim#logger#setLevel({level})                 *SpaceVim#logger#setLevel()*
  Set debug level of SpaceVim. Default is 1.

      1 : log all messages

      2 : log warning and error messages

      3 : log error messages only

SpaceVim#logger#setOutput({file})                *SpaceVim#logger#setOutput()*
  Set the log output file of SpaceVim. Default is empty.

==============================================================================
LAYERS                                                       *SpaceVim-layers*

  SpaceVim support such layers:

==============================================================================
DEFAULT                                                     *SpaceVim-default*

==============================================================================
AUTOCOMPLETE                                           *SpaceVim-autocomplete*

CODE COMPLETION
SpaceVim uses neocomplete as the default completion engine if vim has lua
support. If there is no lua support, neocomplcache will be used for the
completion engine. SpaceVim uses deoplete as the default completion engine for
neovim. Deoplete requires neovim to be compiled with python support. For more
information on python support, please read neovim's |provider-python|.

SpaceVim includes YouCompleteMe, but it is disabled by default. To enable ycm,
see |g:spacevim_enable_ycm|.

SNIPPET
SpaceVim use neosnippet as the default snippet engine. The default snippets
are provided by `Shougo/neosnippet-snippets`. For more information, please
read |neosnippet|. Neosnippet support custom snippets, and the default
snippets directory is `~/.SpaceVim/snippets/`. If
`g:spacevim_force_global_config = 1`, SpaceVim will not append
`./.SpaceVim/snippets` as default snippets directory.

==============================================================================
CHECKERS                                             *SpaceVim-layer-checkers*

SpaceVim uses neomake as default syntax checker.

==============================================================================
COLORSCHEME                                             *SpaceVim-colorscheme*

The ldefault colorscheme for SpaceVim is gruvbox. The colorscheme can be
changed with the `g:spacevim_colorscheme` option by adding the following line
to your `~/.SpaceVim/init.vim`.
>
  let g:spacevim_colorscheme = 'solarized'
<

The following colorschemes are include in SpaceVim. If the colorscheme you
want is not included in the list below, a PR is welcome.

Also, there's one thing which everyone should know and pay attention to. NOT
all of below colorschemes support spell check very well. For example, a
colorscheme called atom doesn't support spell check very well.

SpaceVim is not gonna fix them since these should be in charge of each author.
You can see a list which has no support of spell check in here:
https://github.com/SpaceVim/SpaceVim/issues/209#issuecomment-280545818


>
  anderson
  apprentice
  atom
  base16-3024
  base16-apathy
  base16-ashes
  base16-atelier-cave
  base16-atelier-dune
  base16-atelier-estuary
  base16-atelier-forest
  base16-atelier-heath
  base16-atelier-lakeside
  base16-atelier-plateau
  base16-atelier-savanna
  base16-atelier-seaside
  base16-atelier-sulphurpool
  base16-bespin
  base16-brewer
  base16-bright
  base16-chalk
  base16-codeschool
  base16-cupcake
  base16-darktooth
  base16-default-dark
  base16-default-light
  base16-dracula
  base16-eighties
  base16-embers
  base16-flat
  base16-github
  base16-google-dark
  base16-google-light
  base16-grayscale-dark
  base16-grayscale-light
  base16-green-screen
  base16-harmonic16-dark
  base16-harmonic16-light
  base16-hopscotch
  base16-ir-black
  base16-isotope
  base16-london-tube
  base16-macintosh
  base16-marrakesh
  base16-materia
  base16-mexico-light
  base16-mocha
  base16-monokai
  base16-ocean
  base16-oceanicnext
  base16-onedark
  base16-paraiso
  base16-phd
  base16-pico
  base16-pop
  base16-railscasts
  base16-seti-ui
  base16-shapeshifter
  base16-solar-flare
  base16-solarized-dark
  base16-solarized-light
  base16-spacemacs
  base16-summerfruit-dark
  base16-summerfruit-light
  base16-tomorrow
  base16-tomorrow-night
  base16-twilight
  base16-unikitty-dark
  base16-unikitty-light
  base16-woodland
  blue
  darkblue
  default
  delek
  desert
  elflord
  evening
  flatcolor
  flattened_dark
  flattened_light
  focuspoint
  gruvbox
  hybrid
  hybrid-material
  hybrid_material
  hybrid_reverse
  industry
  janah
  jellybeans
  koehler
  lightning
  lucius
  molokai
  molokayo
  morning
  murphy
  OceanicNext
  OceanicNextLight
  onedark
  pablo
  PaperColor
  parsec
  peachpuff
  pyte
  rdark-terminal2
  ron
  scheakur
  seoul256
  seoul256-light
  shine
  slate
  solarized
  torte
  twilight256
  wombat256mod
  yowish
  zellner
<

==============================================================================
CORE#TABLINE                                     *SpaceVim-layer-core-tabline*

This layer provides default tabline for SpaceVim

==============================================================================
EXPRFOLD                                             *SpaceVim-layer-exprfold*

Fold code quickly according to expr.

Mappings:
>
  Key         Mode            Function
  ----------------------------------------------------
  ZB          normal          Open fold block template
  ZF          normal          Fold block
  ZC          normal          Fold block comment
<

==============================================================================
FORMAT                                                       *SpaceVim-format*

SpaceVim uses neoformat as the default code format tools. Neoformat uses a
variety of formatters for many filetypes. for more info see |neoformat|

==============================================================================
INCSEARCH                                           *SpaceVim-layer-incsearch*

This layer improved incremental searching for neovim/vim

mappings
>
  key         mode        description
  /           n/v         incsearch forward
  ?           n/v         incsearch backward
  g/          n/v         incsearch stay
  n           n           nohlsearch n
  N           n           nohlsearch N
  *           n           nohlsearch *
  g*          n           nohlsearch g*
  #           n           nohlsearch #
  g#          n           nohlsearch g#
  z/          n           incsearch fuzzy /
  z?          n           incsearch fuzzy ?
  zg?         n           incsearch fuzzy g?
  <space>/    n           incsearch easymotion
<

==============================================================================
INDENTMOVE                                         *SpaceVim-layer-indentmove*

Move cursor quickly according to indent.

MAPPINGS

>
  Key         mode            function
  -----------------------------------------------------------------
  EH          normal/visual   move up to nearest line with smaller
                              indent level
  EL          normal/visual   move down to nearest line with larger
                              indent level
  EJ          normal/visual   move down to nearest line with smaller
                              or same indent level
  EK          normal/visual   move down to nearest line with larger
                              or same indent level
  EI          normal/visual   move down to nearest child indent
<



==============================================================================
LANG#C                                                 *SpaceVim-layer-lang-c*

This layer provides C family language code completion and syntax checking.
Requires clang.

Configuration for `tweekmonster/deoplete-clang2`:

  1. Set the compile flags:

      `let g:deoplete#sources#clang#flags = ['-Iwhatever', ...]`

  2. Set the path to the clang executable:

      `let g:deoplete#sources#clang#executable = '/usr/bin/clang'

  3. `g:deoplete#sources#clang#autofill_neomake` is a boolean that tells this
    plugin to fill in the `g:neomake_<filetype>_clang_maker` variable with the
    clang executable path and flags. You will still need to enable it with
    `g:neomake_<filetype>_enabled_make=['clang']`.

  4. Set the standards for each language: `g:deoplete#sources#clang#std` is a
    dict containing the standards you want to use. It's not used if you
    already have `-std=whatever` in your flags. The defaults are:

>
      {
          'c': 'c11',
          'cpp': 'c++1z',
          'objc': 'c11',
          'objcpp': 'c++1z',
      }
<
  5. `g:deoplete#sources#clang#preproc_max_lines` sets the maximum number of
    lines to search for an #ifdef or #endif line. #ifdef lines are discarded
    to get completions within conditional preprocessor blocks. The default is
    50,  setting it to 0 disables this feature.


==============================================================================
LANG#CRYSTAL                                     *SpaceVim-layer-lang-crystal*

INTRO
The lang#crystal layer provides crystal filetype detection and syntax
highlight, crystal tool and crystal spec integration.

==============================================================================
LANG#ELIXIR                                       *SpaceVim-layer-lang-elixir*

INTRO
The lang#elixir layer provides code completion, documentation lookup, jump to
definition, mix integration, and iex integration for Elixir. SpaceVim uses
neomake as default syntax checker which is loaded in |SpaceVim-layer-checkers|

==============================================================================
LANG#GO                                               *SpaceVim-layer-lang-go*

This layer includes code completion and syntax checking for Go development.

MAPPINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l i         go implements
  normal          SPC l f         go info
  normal          SPC l e         go rename
  normal          SPC l r         go run
  normal          SPC l b         go build
  normal          SPC l t         go test
  normal          SPC l d         go doc
  normal          SPC l v         go doc vertical
  normal          SPC l c         go coverage
<

==============================================================================
LANG#JAVA                                           *SpaceVim-layer-lang-java*

This layer is for Java development.

MAPPINGS

>
  Import key bindings:

  Mode      Key           Function
  -------------------------------------------------------------
  normal    <F4>          import class under cursor
  insert    <F4>          import class under cursor
  normal    SPC l I       import missing classes
  normal    SPC l R       remove unused imports
  normal    SPC l i       smart import class under cursor
  insert    <c-j>I        import missing imports
  insert    <c-j>R        remove unused imports
  insert    <c-j>i        smart import class under cursor

  Generate key bindings:

  Mode      Key           Function
  -------------------------------------------------------------
  normal    SPC l g A    generate accessors
  normal    SPC l g s    generate setter accessor
  normal    SPC l g g    generate getter accessor
  normal    SPC l g a    generate setter and getter accessor
  normal    SPC l g t    generate toString function
  normal    SPC l g e    generate equals and hashcode function
  normal    SPC l g c    generate constructor
  normal    SPC l g C    generate default constructor
  insert    <c-j>s       generate setter accessor
  insert    <c-j>g       generate getter accessor
  insert    <c-j>a       generate getter and setter accessor
  visual    SPC l g s    generate setter accessor
  visual    SPC l g g    generate getter accessor
  visual    SPC l g a    generate setter and getter accessor

  Maven key bindings:

  Mode      Key           Function
  -------------------------------------------------------------
  normal    SPC l m i           Run maven clean install
  normal    SPC l m I       Run maven install
  normal    SPC l m p       Run one already goal from list
  normal    SPC l m r       Run maven goals
  normal    SPC l m R       Run one maven goal
  normal    SPC l m t       Run maven test

  Jump key bindings:

  Mode      Key           Function
  -------------------------------------------------------------
  normal    SPC l j a           jump to alternate file

  REPL key bindings:

  Mode      Key           Function
  -------------------------------------------------------------
  normal    SPC l s i       start a jshell inferior REPL process
  normal    SPC l s b       send buffer and keep code buffer focused
  normal    SPC l s l       send line and keep code buffer focused
  normal    SPC l s s       send selection text and keep code buffer focused
<
CODE FORMATTING
To make neoformat support java file, you should install uncrustify. or
download google's formater jar from:
https://github.com/google/google-java-format

and set 'g:spacevim_layer_lang_java_formatter' to the path of the jar.

==============================================================================
LANG#JULIA                                         *SpaceVim-layer-lang-julia*

The layer provides synatax highlight and linting for julia.  The completeion
only works in nvim with deoplete. However, the julia-vim could not be load
on-demanding  due to its LaTeXToUnicode feature.


==============================================================================
LANG#KOTLIN                                       *SpaceVim-layer-lang-kotlin*

This layer is for kotlin development.

==============================================================================
LANG#LUA                                             *SpaceVim-layer-lang-lua*

This layer includes utilities and language-specific mappings for lua
development.

MAPPINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         lua run
<

==============================================================================
LANG#OCAML                                         *SpaceVim-layer-lang-ocaml*

OCaml autocompletion provided by merlin.

Requirements:
>
  opam
  merlin
<

==============================================================================
LANG#PHP                                             *SpaceVim-layer-lang-php*

This layer is for PHP development. It proides code completion, syntax
checking, and jump to definition.

Requirements:
>
  PHP 5.3+
  PCNTL Extension
  Msgpack 0.5.7+(for NeoVim)Extension: https://github.com/msgpack/msgpack-php
  JSON(for Vim 7.4+)Extension
  Composer Project
<

==============================================================================
LANG#PONY                                           *SpaceVim-layer-lang-pony*

==============================================================================
LANG#PUPPET                                       *SpaceVim-layer-lang-puppet*

This layer is for Puppet development. It provides syntax highlighting and
syntax checking.

Requirements:
>
  Puppet
  Puppet Lint
<

==============================================================================
LANG#PYTHON                                       *SpaceVim-layer-lang-python*

To make this layer work well, you should install jedi.
MAPPINGS

>
  mode            key             function
<

==============================================================================
LANG#RUST                                           *SpaceVim-layer-lang-rust*

SpaceVim does not load this layer by default. If you are a rust developer, you
should add `call SpaceVim#layers#load('lang#rust')` to your |SpaceVim-config|

Requirements:

  1. Racer needs a copy of the rust source. The easiest way to do this is with
    rustup. Once rustup is installed, download the source with:

>
      rustup component add rust-src
<
  2. Install racer:

>
      cargo install racer
<
  3. Set the RUST_SRC_PATH variable in your .bashrc:

>
      RUST_SRC_PATH=~/.multirust/toolchains/<change>/lib/rustlib/src/rust/src
      export RUST_SRC_PATH
<
  4. Add racer to your path, or set the path with:

>
      let g:racer_cmd = "/path/to/racer/bin"
<

MAPPINGS

>
  Mode        Key         Function
  -----------------------------------------------
  normal      gd          rust-definition
  normal      gs          rust-definition-split
  normal      gx          rust-definition-vertical
  normal      SPC l d     rust-doc
  normal      SPC l r     execute current file
<

==============================================================================
LANG#SCALA                                         *SpaceVim-layer-lang-scala*

==============================================================================
LANG#TMUX                                           *SpaceVim-layer-lang-tmux*

INTRO
The lang#tmux layer provides syntax highlighting, commenting, man page
navigation and ability to execute lines as tmux commands.
|SpaceVim-layer-checkers|

==============================================================================
LANG#XML                                             *SpaceVim-layer-lang-xml*

When editing an xml file, the omni func is xmlcomplete#CompleteTags. You can
read the documentation in autoload/xmlcomplete.vim in the vim or neovim
runtime directory.

==============================================================================
OPERATOR                                             *SpaceVim-layer-operator*

With this layer, you can confirm that text is yanked correctly and see yanked
text by highlighting.

==============================================================================
SHELL                                                   *SpaceVim-layer-shell*

SpaceVim uses deol.nvim for shell support in neovim and uses vimshell for vim.
For more info, read |deol| and |vimshell|.
VARIABLE
default_shell


==============================================================================
TMUX                                                     *SpaceVim-layer-tmux*

Adds integration between tmux and vim panes. Switch between panes seamlessly.
This layer is not added by default. To include it, add
`SpaceVim#layers#load('tmux')` to your `~/.SpaceVim.d/init.vim`. If you are
having issues with <C-h> in a neovim buffer, see
`https://github.com/neovim/neovim/issues/2048#issuecomment-78045837`

MAPPINGS

>
  Key       Mode        Function
  ------------------------------
  <C-h>     normal      Switch to vim/tmux pane in left direction
  <C-j>     normal      Switch to vim/tmux pane in down direction
  <C-k>     normal      Switch to vim/tmux pane in up direction
  <C-l>     normal      Switch to vim/tmux pane in right direction
<

==============================================================================
API                                                             *SpaceVim-api*

SpaceVim contains a variety of public apis. here is a list of all the apis.
USAGE
This is just an example, and it works well in old version vim.
>
  let s:json = SpaceVim#api#import('data#json')
  let rst = s:json.json_encode(onject)
  let rst = s:json.json_decode(string)
<

==============================================================================
CMDLINEMENU                                         *SpaceVim-api-cmdlinemenu*

menu({items})

Create a cmdline selection menu from a list of {items}, each item should be a
list of two value in it, first one is the description, and the next one should
be a funcrc.

==============================================================================
DATA#LIST                                             *SpaceVim-api-data-list*

pop({list})

Removes the last element from {list} and returns the element, as if the {list}
is a stack.

push({list})

Appends {val} to the end of {list} and returns the list itself, as if the
{list} is a stack.

listpart({list}, {start}[, {len}])

The result is a List, which is part of {list}, starting from index {start},
with the length {len}

==============================================================================
PROMPT                                                   *SpaceVim-api-prompt*

open()

Create a cmdline prompt, use while loop to get the input from user. The
default mapping for prompt is:
>
  <Bs>            remove last character
  <C-w>           remove the Word before the cursor
  <C-u>           remove the Line before the cursor
  <C-k>           remove the Line after the cursor
  <C-a> / <Home>  Go to the beginning of the line
  <C-e> / <End>   Go to the end of the line
<

==============================================================================
SID                                                     *SpaceVim-api-vim-sid*

" Capture command

==============================================================================
VIM#MESSAGE                                         *SpaceVim-api-vim-message*

==============================================================================
FAQ                                                             *SpaceVim-faq*

  1. How do I enable YouCompleteMe?

>
  I do not recommend using YouCompleteMe.
  It is too big as a vim plugin. Also, I do not like using submodules in a vim
  plugin. It is hard to manage with a plugin manager.

  Step 1: Add `let g:spacevim_enable_ycm = 1` to custom_config. By default
  it should be `~/.SpaceVim.d/init.vim`.

  Step 2: Get into the directory of YouCompleteMe's author. By default it
  should be `~/.cache/vimfiles/repos/github.com/Valloric/`. If you find the
  directory `YouCompleteMe` in it, go into it. Otherwise clone
  YouCompleteMe repo by
  `git clone https://github.com/Valloric/YouCompleteMe.git`. After cloning,
  get into it and run `git submodule update --init --recursive`.

  Step 3: Compile YouCompleteMe with the features you want. If you just want
  C family support, run `./install.py --clang-completer`.
<

  2. How to add custom snippet?

>
  SpaceVim uses neosnippet as the default snippet engine. If you want to add
  a snippet for a vim filetype, open a vim file and run `:NeoSnippetEdit`
  command. A buffer will be opened and you can add your custom snippet.
  By default this buffer will be save in `~/.SpaceVim/snippets`.
  If you want to use another directory:

  let g:neosnippet#snippets_directory = '~/path/to/snip_dir'

  For more info about how to write snippet, please
  read |neosnippet-snippet-syntax|.
<

  3. Where is `<c-f>` in cmdline-mode?

>
  `<c-f>` is the default value of |cedit| option, but in SpaceVim we use that
  binding as `<Right>`, so maybe you can change the `cedit` option or use
  `<leader>+<c-f>`.
<

  4. How to use `<space>` as `<leader>`?

>
  Add `let mapleader = "\<space>"` to `~/.SpaceVim.d/init.vim`
<


vim:tw=78:ts=8:ft=help:norl:
