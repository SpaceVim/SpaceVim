*SpaceVim.txt*	

                                                                          
    /######                                     /##    /##/##             
   /##__  ##                                   | ##   | #|__/             
  | ##  \__/ /######  /######  /####### /######| ##   | ##/##/######/#### 
  |  ###### /##__  ##|____  ##/##_____//##__  #|  ## / ##| #| ##_  ##_  ## 
   \____  #| ##  \ ## /######| ##     | ########\  ## ##/| #| ## \ ## \ ## 
   /##  \ #| ##  | ##/##__  #| ##     | ##_____/ \  ###/ | #| ## | ## | ## 
  |  ######| #######|  ######|  ######|  #######  \  #/  | #| ## | ## | ## 
   \______/| ##____/ \_______/\_______/\_______/   \_/   |__|__/ |__/ |__/ 
           | ##                                                           
           | ##                                                           
           |__/                                                           
wsdjeg                                                   *spacevim* *SpaceVim*

==============================================================================
CONTENTS                                                   *SpaceVim-contents*
  1. Introduction.............................................|SpaceVim-intro|
  2. Options................................................|SpaceVim-options|
      1. autocomplete_method............|SpaceVim-options-autocomplete_method|
      2. autocomplete_parens............|SpaceVim-options-autocomplete_parens|
      3. bootstrap_after....................|SpaceVim-options-bootstrap_after|
      4. bootstrap_before..................|SpaceVim-options-bootstrap_before|
      5. buffer_index_type................|SpaceVim-options-buffer_index_type|
      6. checkinstall..........................|SpaceVim-options-checkinstall|
      7. code_runner_focus................|SpaceVim-options-code_runner_focus|
      8. colorscheme............................|SpaceVim-options-colorscheme|
      9. colorscheme_bg......................|SpaceVim-options-colorscheme_bg|
      10. commandline_prompt.............|SpaceVim-options-commandline_prompt|
      11. data_dir.................................|SpaceVim-options-data_dir|
      12. default_custom_leader.......|SpaceVim-options-default_custom_leader|
      13. default_indent.....................|SpaceVim-options-default_indent|
      14. enable_bepo_layout.............|SpaceVim-options-enable_bepo_layout|
      15. enable_cursorcolumn...........|SpaceVim-options-enable_cursorcolumn|
      16. enable_cursorline...............|SpaceVim-options-enable_cursorline|
      17. enable_debug.........................|SpaceVim-options-enable_debug|
      18. enable_googlesuggest.........|SpaceVim-options-enable_googlesuggest|
      19. enable_guicolors.................|SpaceVim-options-enable_guicolors|
      20. enable_key_frequency.........|SpaceVim-options-enable_key_frequency|
      21. enable_projects_cache.......|SpaceVim-options-enable_projects_cache|
      22. enable_statusline_bfpath.|SpaceVim-options-enable_statusline_bfpath|
      23. enable_statusline_mode.....|SpaceVim-options-enable_statusline_mode|
      24. enable_statusline_tag.......|SpaceVim-options-enable_statusline_tag|
      25. enable_tabline_ft_icon.....|SpaceVim-options-enable_tabline_ft_icon|
      26. enable_vimfiler_welcome...|SpaceVim-options-enable_vimfiler_welcome|
      27. enable_ycm.............................|SpaceVim-options-enable_ycm|
      28. error_symbol.........................|SpaceVim-options-error_symbol|
      29. escape_key_binding.............|SpaceVim-options-escape_key_binding|
      30. expand_tab.............................|SpaceVim-options-expand_tab|
      31. file_searching_tools.........|SpaceVim-options-file_searching_tools|
      32. filemanager...........................|SpaceVim-options-filemanager|
      33. filetree_direction.............|SpaceVim-options-filetree_direction|
      34. guifont...................................|SpaceVim-options-guifont|
      35. home_files_number...............|SpaceVim-options-home_files_number|
      36. info_symbol...........................|SpaceVim-options-info_symbol|
      37. keep_server_alive...............|SpaceVim-options-keep_server_alive|
      38. language.................................|SpaceVim-options-language|
      39. lint_engine...........................|SpaceVim-options-lint_engine|
      40. lint_on_the_fly...................|SpaceVim-options-lint_on_the_fly|
      41. max_column.............................|SpaceVim-options-max_column|
      42. plugin_bundle_dir...............|SpaceVim-options-plugin_bundle_dir|
      43. plugin_manager_processes.|SpaceVim-options-plugin_manager_processes|
      44. project_auto_root...............|SpaceVim-options-project_auto_root|
      45. project_non_root.................|SpaceVim-options-project_non_root|
      46. project_rooter_outermost.|SpaceVim-options-project_rooter_outermost|
      47. project_rooter_patterns...|SpaceVim-options-project_rooter_patterns|
      48. projects_cache_num.............|SpaceVim-options-projects_cache_num|
      49. realtime_leader_guide.......|SpaceVim-options-realtime_leader_guide|
      50. relativenumber.....................|SpaceVim-options-relativenumber|
      51. retry_cnt...............................|SpaceVim-options-retry_cnt|
      52. search_tools.........................|SpaceVim-options-search_tools|
      53. sidebar_width.......................|SpaceVim-options-sidebar_width|
      54. snippet_engine.....................|SpaceVim-options-snippet_engine|
      55. statusline_iseparator.......|SpaceVim-options-statusline_iseparator|
      56. statusline_left...................|SpaceVim-options-statusline_left|
      57. statusline_right.................|SpaceVim-options-statusline_right|
      58. statusline_separator.........|SpaceVim-options-statusline_separator|
      59. statusline_unicode.............|SpaceVim-options-statusline_unicode|
      60. terminal_cursor_shape.......|SpaceVim-options-terminal_cursor_shape|
      61. todo_labels...........................|SpaceVim-options-todo_labels|
      62. todo_prefix...........................|SpaceVim-options-todo_prefix|
      63. vim_help_language...............|SpaceVim-options-vim_help_language|
      64. vimcompatible.......................|SpaceVim-options-vimcompatible|
      65. warning_symbol.....................|SpaceVim-options-warning_symbol|
      66. wildignore.............................|SpaceVim-options-wildignore|
      67. windisk_encoding.................|SpaceVim-options-windisk_encoding|
      68. windows_index_type.............|SpaceVim-options-windows_index_type|
      69. windows_leader.....................|SpaceVim-options-windows_leader|
      70. windows_smartclose.............|SpaceVim-options-windows_smartclose|
  3. Configuration...........................................|SpaceVim-config|
  4. Commands..............................................|SpaceVim-commands|
  5. Public functions.....................................|SpaceVim-functions|
  6. Layers..................................................|SpaceVim-layers|
      1. Chinese.....................................|SpaceVim-layers-chinese|
      2. VersionControl.......................|SpaceVim-layers-VersionControl|
      3. autocomplete...........................|SpaceVim-layers-autocomplete|
      4. chat...........................................|SpaceVim-layers-chat|
      5. checkers...................................|SpaceVim-layers-checkers|
      6. colorscheme.............................|SpaceVim-layers-colorscheme|
      7. core...........................................|SpaceVim-layers-core|
      8. core#statusline.....................|SpaceVim-layers-core-statusline|
      9. core#tabline...........................|SpaceVim-layers-core-tabline|
      10. cscope......................................|SpaceVim-layers-cscope|
      11. ctrlp........................................|SpaceVim-layers-ctrlp|
      12. debug........................................|SpaceVim-layers-debug|
      13. edit..........................................|SpaceVim-layers-edit|
      14. exprfold..................................|SpaceVim-layers-exprfold|
      15. foldsearch..............................|SpaceVim-layers-foldsearch|
      16. format......................................|SpaceVim-layers-format|
      17. fzf............................................|SpaceVim-layers-fzf|
      18. git............................................|SpaceVim-layers-git|
      19. github......................................|SpaceVim-layers-github|
      20. gtags........................................|SpaceVim-layers-gtags|
      21. incsearch................................|SpaceVim-layers-incsearch|
      22. indentmove..............................|SpaceVim-layers-indentmove|
      23. lang#WebAssembly..................|SpaceVim-layers-lang-WebAssembly|
      24. lang#actionscript................|SpaceVim-layers-lang-actionscript|
      25. lang#agda................................|SpaceVim-layers-lang-agda|
      26. lang#asciidoc........................|SpaceVim-layers-lang-asciidoc|
      27. lang#asepctj..........................|SpaceVim-layers-lang-asepctj|
      28. lang#assembly........................|SpaceVim-layers-lang-assembly|
      29. lang#autohotkey....................|SpaceVim-layers-lang-autohotkey|
      30. lang#autoit............................|SpaceVim-layers-lang-autoit|
      31. lang#batch..............................|SpaceVim-layers-lang-batch|
      32. lang#c......................................|SpaceVim-layers-lang-c|
      33. lang#chapel............................|SpaceVim-layers-lang-chapel|
      34. lang#clojure..........................|SpaceVim-layers-lang-clojure|
      35. lang#coffeescript................|SpaceVim-layers-lang-coffeescript|
      36. lang#crystal..........................|SpaceVim-layers-lang-crystal|
      37. lang#csharp............................|SpaceVim-layers-lang-csharp|
      38. lang#d......................................|SpaceVim-layers-lang-d|
      39. lang#dart................................|SpaceVim-layers-lang-dart|
      40. lang#dockerfile....................|SpaceVim-layers-lang-dockerfile|
      41. lang#e......................................|SpaceVim-layers-lang-e|
      42. lang#eiffel............................|SpaceVim-layers-lang-eiffel|
      43. lang#elixir............................|SpaceVim-layers-lang-elixir|
      44. lang#elm..................................|SpaceVim-layers-lang-elm|
      45. lang#erlang............................|SpaceVim-layers-lang-erlang|
      46. lang#extra..............................|SpaceVim-layers-lang-extra|
      47. lang#fennel............................|SpaceVim-layers-lang-fennel|
      48. lang#forth..............................|SpaceVim-layers-lang-forth|
      49. lang#fortran..........................|SpaceVim-layers-lang-fortran|
      50. lang#foxpro............................|SpaceVim-layers-lang-foxpro|
      51. lang#fsharp............................|SpaceVim-layers-lang-fsharp|
      52. lang#go....................................|SpaceVim-layers-lang-go|
      53. lang#goby................................|SpaceVim-layers-lang-goby|
      54. lang#gosu................................|SpaceVim-layers-lang-gosu|
      55. lang#graphql..........................|SpaceVim-layers-lang-graphql|
      56. lang#groovy............................|SpaceVim-layers-lang-groovy|
      57. lang#hack................................|SpaceVim-layers-lang-hack|
      58. lang#haskell..........................|SpaceVim-layers-lang-haskell|
      59. lang#html................................|SpaceVim-layers-lang-html|
      60. lang#hy....................................|SpaceVim-layers-lang-hy|
      61. lang#idris..............................|SpaceVim-layers-lang-idris|
      62. lang#io....................................|SpaceVim-layers-lang-io|
      63. lang#j......................................|SpaceVim-layers-lang-j|
      64. lang#janet..............................|SpaceVim-layers-lang-janet|
      65. lang#java................................|SpaceVim-layers-lang-java|
      66. lang#javascript....................|SpaceVim-layers-lang-javascript|
      67. lang#jr....................................|SpaceVim-layers-lang-jr|
      68. lang#json................................|SpaceVim-layers-lang-json|
      69. lang#julia..............................|SpaceVim-layers-lang-julia|
      70. lang#kotlin............................|SpaceVim-layers-lang-kotlin|
      71. lang#latex..............................|SpaceVim-layers-lang-latex|
      72. lang#lisp................................|SpaceVim-layers-lang-lisp|
      73. lang#livescript....................|SpaceVim-layers-lang-livescript|
      74. lang#lua..................................|SpaceVim-layers-lang-lua|
      75. lang#markdown........................|SpaceVim-layers-lang-markdown|
      76. lang#moonscript....................|SpaceVim-layers-lang-moonscript|
      77. lang#nim..................................|SpaceVim-layers-lang-nim|
      78. lang#nix..................................|SpaceVim-layers-lang-nix|
      79. lang#ocaml..............................|SpaceVim-layers-lang-ocaml|
      80. lang#octave............................|SpaceVim-layers-lang-octave|
      81. lang#pact................................|SpaceVim-layers-lang-pact|
      82. lang#pascal............................|SpaceVim-layers-lang-pascal|
      83. lang#perl................................|SpaceVim-layers-lang-perl|
      84. lang#php..................................|SpaceVim-layers-lang-php|
      85. lang#plantuml........................|SpaceVim-layers-lang-plantuml|
      86. lang#pony................................|SpaceVim-layers-lang-pony|
      87. lang#processing....................|SpaceVim-layers-lang-processing|
      88. lang#prolog............................|SpaceVim-layers-lang-prolog|
      89. lang#puppet............................|SpaceVim-layers-lang-puppet|
      90. lang#purescript....................|SpaceVim-layers-lang-purescript|
      91. lang#python............................|SpaceVim-layers-lang-python|
      92. lang#racket............................|SpaceVim-layers-lang-racket|
      93. lang#racket...............................|SpaceVim-layers-lang-red|
      94. lang#reason............................|SpaceVim-layers-lang-reason|
      95. lang#ring...................................|SpaceVim-layers-lang-r|
      96. lang#ring................................|SpaceVim-layers-lang-ring|
      97. lang#ruby................................|SpaceVim-layers-lang-ruby|
      98. lang#rust................................|SpaceVim-layers-lang-rust|
      99. lang#scala..............................|SpaceVim-layers-lang-scala|
      100. lang#scheme...........................|SpaceVim-layers-lang-scheme|
      101. lang#sh...................................|SpaceVim-layers-lang-sh|
      102. lang#smalltalk.....................|SpaceVim-layers-lang-smalltalk|
      103. lang#sml.................................|SpaceVim-layers-lang-sml|
      104. lang#swig..............................|SpaceVim-layers-lang-swift|
      105. lang#swig...............................|SpaceVim-layers-lang-swig|
      106. lang#tcl.................................|SpaceVim-layers-lang-tcl|
      107. lang#toml...............................|SpaceVim-layers-lang-toml|
      108. lang#typescript...................|SpaceVim-layers-lang-typescript|
      109. lang#v.....................................|SpaceVim-layers-lang-v|
      110. lang#vala...............................|SpaceVim-layers-lang-vala|
      111. lang#vbnet.............................|SpaceVim-layers-lang-vbnet|
      112. lang#verilog.........................|SpaceVim-layers-lang-verilog|
      113. lang#vim.................................|SpaceVim-layers-lang-vim|
      114. lang#vue.................................|SpaceVim-layers-lang-vue|
      115. lang#wdl.................................|SpaceVim-layers-lang-wdl|
      116. lang#wolfram.........................|SpaceVim-layers-lang-wolfram|
      117. lang#xml.................................|SpaceVim-layers-lang-xml|
      118. lang#xquery...........................|SpaceVim-layers-lang-xquery|
      119. lang#zig.................................|SpaceVim-layers-lang-zig|
      120. language server protocol......................|SpaceVim-layers-lsp|
      121. leaderf...................................|SpaceVim-layers-leaderf|
      122. mail.........................................|SpaceVim-layers-mail|
      123. operator.................................|SpaceVim-layers-operator|
      124. shell.......................................|SpaceVim-layers-shell|
      125. ssh...........................................|SpaceVim-layers-ssh|
      126. test.........................................|SpaceVim-layers-test|
      127. tmux.........................................|SpaceVim-layers-tmux|
      128. tools#dash.............................|SpaceVim-layers-tools-dash|
      129. tools#mpv...............................|SpaceVim-layers-tools-mpv|
      130. tools#zeal.............................|SpaceVim-layers-tools-zeal|
      131. treesitter.............................|SpaceVim-layers-treesitter|
      132. ui.............................................|SpaceVim-layers-ui|
      133. unite.......................................|SpaceVim-layers-unite|
  7. Usage....................................................|SpaceVim-usage|
      1. alternate file........................|SpaceVim-usage-alternate-file|
      2. buffers-and-files..................|SpaceVim-usage-buffers-and-files|
      3. command-line-mode..................|SpaceVim-usage-command-line-mode|
      4. custom_plugins........................|SpaceVim-usage-custom_plugins|
      5. repl............................................|SpaceVim-usage-repl|
      6. search-and-replace................|SpaceVim-usage-search-and-replace|
      7. tasks..........................................|SpaceVim-usage-tasks|
      8. undo-tree...................................|SpaceVim-usage-undotree|
      9. windows-and-tabs....................|SpaceVim-usage-windows-and-tabs|
  8. Plugins................................................|SpaceVim-plugins|
      1. iedit........................................|SpaceVim-plugins-iedit|
      2. runner......................................|SpaceVim-plugins-runner|
      3. tab manager.............................|SpaceVim-plugins-tabmanager|
      4. todo manager...........................|SpaceVim-plugins-todomanager|
  9. API........................................................|SpaceVim-api|
      1. clock............................................|SpaceVim-api-clock|
      2. cmdlinemenu................................|SpaceVim-api-cmdlinemenu|
      3. data#dict....................................|SpaceVim-api-data-dict|
      4. data#list....................................|SpaceVim-api-data-list|
      5. data#number................................|SpaceVim-api-data-number|
      6. data#string................................|SpaceVim-api-data-string|
      7. file..............................................|SpaceVim-api-file|
      8. job................................................|SpaceVim-api-job|
      9. logger..........................................|SpaceVim-api-logger|
      10. notify.........................................|SpaceVim-api-notify|
      11. password.....................................|SpaceVim-api-password|
      12. prompt.........................................|SpaceVim-api-prompt|
      13. sid...........................................|SpaceVim-api-vim-sid|
      14. system.........................................|SpaceVim-api-system|
      15. time.............................................|SpaceVim-api-time|
      16. unicode#box...............................|SpaceVim-api-unicode-box|
      17. vim#buffer.................................|SpaceVim-api-vim-buffer|
      18. vim#command...............................|SpaceVim-api-vim-command|
      19. vim#compatible.........................|SpaceVim-api-vim-compatible|
      20. vim#message...............................|SpaceVim-api-vim-message|
      21. vim#window.................................|SpaceVim-api-vim-window|
  10. Development...............................................|SpaceVim-dev|
      1. commit-style-guide..................|SpaceVim-dev-commit-style-guide|
  11. FAQ.......................................................|SpaceVim-faq|
  12. Changelog...........................................|SpaceVim-changelog|

==============================================================================
INTRODUCTION                                                  *SpaceVim-intro*

SpaceVim is a bundle of custom settings and plugins with a modular
configuration for Vim. It was inspired by Spacemacs.


==============================================================================
OPTIONS                                                     *SpaceVim-options*

SpaceVim uses `~/.SpaceVim.d/init.toml` as its default global config file. You
can set all the SpaceVim options and layers in it. `~/.SpaceVim.d/` will also
be added to runtimepath, so you can write your own scripts in it. SpaceVim
also supports local config for each project. Place local config settings in
`.SpaceVim.d/init.toml` in the root directory of your project. `.SpaceVim.d/`
will also be added to runtimepath.

here is an example setting SpaceVim options:
>
  [options]
    enable-guicolors = true
    max-column = 120
<

==============================================================================
AUTOCOMPLETE_METHOD                     *SpaceVim-options-autocomplete_method*

Set the autocomplete engine of spacevim, the default logic is:
>
  if has('python3')
    let g:spacevim_autocomplete_method = 'deoplete'
  elseif has('lua')
    let g:spacevim_autocomplete_method = 'neocomplete'
  elseif has('python')
    let g:spacevim_autocomplete_method = 'completor'
  elseif has('timers')
    let g:spacevim_autocomplete_method = 'asyncomplete'
  else
    let g:spacevim_autocomplete_method = 'neocomplcache'
  endif
<

and you can alse set this option to coc, then coc.nvim will be used. If you
are using neovim, you can also set this option to `nvim-cmp`, then nvim-cmp
will be used.

==============================================================================
AUTOCOMPLETE_PARENS                     *SpaceVim-options-autocomplete_parens*

Enable/Disable autocompletion of parentheses, default is true (enabled).
>
  autocomplete_parens = false
<

==============================================================================
BOOTSTRAP_AFTER                             *SpaceVim-options-bootstrap_after*

set the bootstrap_after function, this function will be called on `VimEnter`
event.
>
  [options]
    bootstrap_after = 'myspacevim#after'
<

==============================================================================
BOOTSTRAP_BEFORE                           *SpaceVim-options-bootstrap_before*

set the bootstrap_before function, this function will be called when loading
custom configuration file. for example:
>
  [options]
    bootstrap_before = 'myspacevim#before'
<

==============================================================================
BUFFER_INDEX_TYPE                         *SpaceVim-options-buffer_index_type*

Set SpaceVim buffer index type, default is 4.
>
  # types:
  # 0: 1 ➛ ➊
  # 1: 1 ➛ ➀
  # 2: 1 ➛ ⓵
  # 3: 1 ➛ ¹
  # 4: 1 ➛ 1
  buffer_index_type = 1
<

==============================================================================
CHECKINSTALL                                   *SpaceVim-options-checkinstall*

Enable/Disable checkinstall on SpaceVim startup. Default is true.
>
  checkinstall = true
<

==============================================================================
CODE_RUNNER_FOCUS                         *SpaceVim-options-code_runner_focus*

enable/disable code runner window focus mode, by default this option is
`false`, to enable this mode, set this option to `true`.
>
  code_runner_focus = true
<

==============================================================================
COLORSCHEME                                     *SpaceVim-options-colorscheme*

The colorscheme of SpaceVim. Default is 'gruvbox'.

==============================================================================
COLORSCHEME_BG                               *SpaceVim-options-colorscheme_bg*

The background of colorscheme. Default is 'dark'.

==============================================================================
COMMANDLINE_PROMPT                       *SpaceVim-options-commandline_prompt*

Config the command line prompt for flygrep and denite etc. Default is `>`, for
example:
>
  commandline_prompt = '➭'
<

==============================================================================
DATA_DIR                                           *SpaceVim-options-data_dir*

Set the cache directory of SpaceVim. Default is `$XDG_CACHE_HOME`  or if not
set `~/.cache¸.
>
  data_dir = "~/.cache"
<

==============================================================================
DEFAULT_CUSTOM_LEADER                 *SpaceVim-options-default_custom_leader*

Change the default custom leader of SpaceVim. Default is <Space>.
>
  default_custom_leader = "<Space>"
<

==============================================================================
DEFAULT_INDENT                               *SpaceVim-options-default_indent*

Change the default indentation of SpaceVim. Default is 2.
>
  default_indent = 2
<

==============================================================================
ENABLE_BEPO_LAYOUT                       *SpaceVim-options-enable_bepo_layout*

Enable/Disable bepo layout, by default it is disabled.
>
  enable_bepo_layout = true
<

==============================================================================
ENABLE_CURSORCOLUMN                     *SpaceVim-options-enable_cursorcolumn*

Enable/Disable cursorcolumn. Default is 0, cursorcolumn will be highlighted in
normal mode. To enable this feature:
>
  enable_cursorcolumn = true
<

==============================================================================
ENABLE_CURSORLINE                         *SpaceVim-options-enable_cursorline*

Enable/Disable cursorline. Default is true, cursorline will be highlighted in
normal mode.To disable this feature:
>
  enable_cursorline = false
<

==============================================================================
ENABLE_DEBUG                                   *SpaceVim-options-enable_debug*

Enable/Disable debug mode for SpaceVim. Default is false.
>
  enable_debug = true
<

==============================================================================
ENABLE_GOOGLESUGGEST                   *SpaceVim-options-enable_googlesuggest*

Enable/Disable Google suggestions for neocomplete. Default is false.
>
  enable_googlesuggest = false
<

==============================================================================
ENABLE_GUICOLORS                           *SpaceVim-options-enable_guicolors*

Enable true color support in terminal. Default is false.
>
  enable_guicolors = true
<

==============================================================================
ENABLE_KEY_FREQUENCY                   *SpaceVim-options-enable_key_frequency*

Enable/Disable key frequency catching of SpaceVim. default value is 0. to
enable it:
>
  enable_key_frequency = true
<

==============================================================================
ENABLE_PROJECTS_CACHE                 *SpaceVim-options-enable_projects_cache*

Enable/Disable cross session projects cache. Enabled by default.

==============================================================================
ENABLE_STATUSLINE_BFPATH           *SpaceVim-options-enable_statusline_bfpath*

Enable/Disable showing full path of current buffer on statusline, disabled by
default, to enable this feature:
>
  enable_statusline_bfpath = true
<

==============================================================================
ENABLE_STATUSLINE_MODE               *SpaceVim-options-enable_statusline_mode*

Enable/Disable display mode. Default is 0, mode will be displayed in
statusline. To enable this feature:
>
  enable_statusline_mode = true
<

==============================================================================
ENABLE_STATUSLINE_TAG                 *SpaceVim-options-enable_statusline_tag*

Enable/Disable showing current tag on statusline
>
  enable_statusline_tag = false
<

==============================================================================
ENABLE_TABLINE_FT_ICON               *SpaceVim-options-enable_tabline_ft_icon*

Enable/Disable tabline filetype icon. default is false. To enable this
feature:
>
  enable_tabline_ft_icon = true
<

==============================================================================
ENABLE_VIMFILER_WELCOME             *SpaceVim-options-enable_vimfiler_welcome*

Enable/Disable vimfiler in the welcome windows. Default is true. This will
cause vim to start up slowly if there are too many files in the current
directory.
>
  enable_vimfiler_welcome = false
<

==============================================================================
ENABLE_YCM                                       *SpaceVim-options-enable_ycm*

Enable/Disable YouCompleteMe. Default is false.
>
  enable_ycm = true
<

==============================================================================
ERROR_SYMBOL                                   *SpaceVim-options-error_symbol*

Set the error symbol for SpaceVim's syntax maker. Default is '✖'.
>
  error_symbol = "+"
<

==============================================================================
ESCAPE_KEY_BINDING                       *SpaceVim-options-escape_key_binding*

Set the key binding for switch to normal mode in insert mode. Default is `jk`,
to disable this key binding, set this option to empty string.
>
  escape_key_binding = 'jk'
<

==============================================================================
EXPAND_TAB                                       *SpaceVim-options-expand_tab*

In Insert mode: Use the appropriate number of spaces to insert a <Tab>

==============================================================================
FILE_SEARCHING_TOOLS                   *SpaceVim-options-file_searching_tools*

Set the default file searching tool used by `SPC f /`, by default it is `[]`.
The first item in this list is the name of the tool, the second one is the
default command. for example:
>
  file_searching_tools = ['find', 'find -not -iwholename "*.git*" ']
<

==============================================================================
FILEMANAGER                                     *SpaceVim-options-filemanager*

The default file manager of SpaceVim. Default is 'nerdtree'. you can also use
defx or vimfiler

==============================================================================
FILETREE_DIRECTION                       *SpaceVim-options-filetree_direction*

Config the direction of file tree. Default is 'right'. you can also set to
'left'.

NOTE: if it is 'left', the tagbar will be move to right.

==============================================================================
GUIFONT                                             *SpaceVim-options-guifont*

Set the guifont of SpaceVim. Default is empty.
>
  guifont = "SauceCodePro Nerd Font Mono:h11"
<

==============================================================================
HOME_FILES_NUMBER                         *SpaceVim-options-home_files_number*

Change the list number of files for SpaceVim home. Default is 6.
>
  home_files_number = 6
<

==============================================================================
INFO_SYMBOL                                     *SpaceVim-options-info_symbol*

Set the information symbol for SpaceVim's syntax maker. Default is '🛈'.
>
  info_symbol = 'i'
<

==============================================================================
KEEP_SERVER_ALIVE                         *SpaceVim-options-keep_server_alive*

Option for keep the spacevim server ailive

==============================================================================
LANGUAGE                                           *SpaceVim-options-language*

Set the message language of vim. Default is 'en_US.UTF-8'.
>
  language = 'en_CA.utf8'
<

==============================================================================
LINT_ENGINE                                     *SpaceVim-options-lint_engine*

Set the lint engine used in checkers layer, the default engine is neomake, if
you want to use ale, use:
>
  lint_engine = 'ale'
<
NOTE: the `enable_neomake` and `enable_ale` option has been deprecated.
*spacevim-options-enable_naomake* *spacevim-options-enable_ale*

==============================================================================
LINT_ON_THE_FLY                             *SpaceVim-options-lint_on_the_fly*

Enable/Disable lint on the fly feature of SpaceVim's maker. Default is true.
>
  lint_on_the_fly = false
<

==============================================================================
MAX_COLUMN                                       *SpaceVim-options-max_column*

Change the max number of columns for SpaceVim. Default is 120.
>
  max_column = 120
<

==============================================================================
PLUGIN_BUNDLE_DIR                         *SpaceVim-options-plugin_bundle_dir*

Set the cache directory of plugins. Default is `$data_dir/vimfiles`.
>
  plugin_bundle_dir = "~/.cache/vimplugs"
<

==============================================================================
PLUGIN_MANAGER_PROCESSES           *SpaceVim-options-plugin_manager_processes*

Set the max process of SpaceVim plugin manager

==============================================================================
PROJECT_AUTO_ROOT                         *SpaceVim-options-project_auto_root*

Enable/Disable project root detection. By default, SpaceVim will change the
directory to the project root directory based on `project_rooter_patterns`
option. To disable this feature:
>
  [options]
    project_auto_root = false
<
NOTE: *g:spacevim_project_rooter_automatically* and
*SpaceVim-options-project_rooter_automatically* are deprecated.

==============================================================================
PROJECT_NON_ROOT                           *SpaceVim-options-project_non_root*

This option set the default behavior for non-project files.
`current`: change to file's dir, like `autochdir`
`''`: do not change directory
`home`: change to home directory

==============================================================================
PROJECT_ROOTER_OUTERMOST           *SpaceVim-options-project_rooter_outermost*

Enable/Disable finding outermost directory for project root detection. By
default SpaceVim will find the outermost directory based on
`project_rooter_patterns`. To find nearest directory, you need to disable this
option:
>
  [options]
    project_rooter_outermost = false
<

==============================================================================
PROJECT_ROOTER_PATTERNS             *SpaceVim-options-project_rooter_patterns*

Set the project root patterns, SpaceVim determines the root directory of the
project based on this option. By default it is:
>
  ['.git/', '_darcs/', '.hg/', '.bzr/', '.svn/']
<

==============================================================================
PROJECTS_CACHE_NUM                       *SpaceVim-options-projects_cache_num*

Setting the numbers of cached projects, by default it is 20.

==============================================================================
REALTIME_LEADER_GUIDE                 *SpaceVim-options-realtime_leader_guide*

Enable/Disable realtime leader guide. Default is true. to disable it:
>
  realtime_leader_guide = false
<

==============================================================================
RELATIVENUMBER                               *SpaceVim-options-relativenumber*

Enable/Disable relativenumber, by default it is enabled.
>
  relativenumber = true
<

==============================================================================
RETRY_CNT                                         *SpaceVim-options-retry_cnt*

Set the number of retries for SpaceVim Update when failed. Default is 3. Set
to 0 to disable this feature, or you can set to another number.
>
  update_retry_cnt = 3
<

==============================================================================
SEARCH_TOOLS                                   *SpaceVim-options-search_tools*

Default search tools supported by flygrep. The default order is ['rg', 'ag',
'pt', 'ack', 'grep', 'findstr', 'git'] The `git` command means using
`git-grep`. If you prefer to use `git-grep` by default. You can change this
option to:
>
  [options]
    search_tools = ['git', 'rg', 'ag']
<

==============================================================================
SIDEBAR_WIDTH                                 *SpaceVim-options-sidebar_width*

Set the width of the SpaceVim sidebar. Default is 30. This value will be used
by tagbar and filetree.

==============================================================================
SNIPPET_ENGINE                               *SpaceVim-options-snippet_engine*

Set the snippet engine of SpaceVim, default is neosnippet. to enable
ultisnips:
>
  snippet_engine = "ultisnips"
<

==============================================================================
STATUSLINE_ISEPARATOR                 *SpaceVim-options-statusline_iseparator*

Set the statusline separators of statusline in inactive windows, default is
'nil'
>
  Separators options:
    1. arrow
    2. curve
    3. slant
    4. nil
    5. fire
<

See more details in: http://spacevim.org/documentation/#statusline


==============================================================================
STATUSLINE_LEFT                             *SpaceVim-options-statusline_left*

Define the left section of statusline in active windows. By default:
>
  statusline_left = [
    'winnr',
    'filename',
    'major mode',
    'minor mode lighters',
    'version control info'
    ]
<
`statusline_left_sections` is deprecated, use `statusline_left` instead.

==============================================================================
STATUSLINE_RIGHT                           *SpaceVim-options-statusline_right*

Define the right section of statusline in active windows. By default:
>
  statusline_right = [
    'fileformat',
    'cursorpos',
    'percentage'
    ]
<

The following sections can be used in this option:
fileformat: the format of current file
cursorpos: the corsur position
percentage: the percent of current page
totallines: the total lines of current buffer

`statusline_right_sections` is deprecated, use `statusline_right` instead.

==============================================================================
STATUSLINE_SEPARATOR                   *SpaceVim-options-statusline_separator*

Set the statusline separators of statusline, default is 'nil'
>
  Separators options:
    1. arrow
    2. curve
    3. slant
    4. nil
    5. fire
<

See more details in: http://spacevim.org/documentation/#statusline


==============================================================================
STATUSLINE_UNICODE                       *SpaceVim-options-statusline_unicode*

Enable/Disable unicode symbols in statusline, includes the mode icons and
fileformat icons. This option is enabled by default, to disable it:
>
  statusline_unicode = false
<

==============================================================================
TERMINAL_CURSOR_SHAPE                 *SpaceVim-options-terminal_cursor_shape*

Set the SpaceVim cursor shape in the terminal.
>
  0 : to prevent Nvim from changing the cursor shape.
  1 : to enable non-blinking mode-sensitive cursor.
  2 : to enable blinking mode-sensitive cursor (default).
<

>
<
Host terminal must support the DECSCUSR CSI escape sequence. Depending on the
terminal emulator, using this option with nvim under tmux might require adding
the following to ~/.tmux.conf:
>
  set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
<

==============================================================================
TODO_LABELS                                     *SpaceVim-options-todo_labels*

Option for setting todo labels in current project.

==============================================================================
TODO_PREFIX                                     *SpaceVim-options-todo_prefix*

Option for setting todo prefix in current project. The default is `@`

==============================================================================
VIM_HELP_LANGUAGE                         *SpaceVim-options-vim_help_language*

Set the help language of vim. Default is 'en'. You can change it to Chinese.
>
  vim_help_language = "cn"
<

==============================================================================
VIMCOMPATIBLE                                 *SpaceVim-options-vimcompatible*

Enable/Disable vimcompatible mode, by default it is false. to enable
vimcompatible mode, just add:
>
  vimcompatible = true
<
In vimcompatible mode all vim origin key bindings will not be changed.

Includes:
>
  q       smart quit windows
  s       windows key bindings leader
  ,       language specific leader
  <C-a>   move cursor to beginning in command line mode
  <C-b>   move cursor to left in command line mode
  <C-f>   move cursor to right in command line mode
  <C-x>   switch buffer
<

==============================================================================
WARNING_SYMBOL                               *SpaceVim-options-warning_symbol*

Set the warning symbol for SpaceVim's syntax maker. Default is '⚠'.
>
  warning_symbol = '!'
<

==============================================================================
WILDIGNORE                                       *SpaceVim-options-wildignore*

A list of file patterns when file match it will be ignored.
>
  wildignore =  '*/tmp/*,*.so,*.swp,*.zip,*.class,tags,*.jpg,*.ttf,*.TTF,*.png
    ,*/target/*,.git,.svn,.hg,.DS_Store,*.svg'
<

==============================================================================
WINDISK_ENCODING                           *SpaceVim-options-windisk_encoding*

Setting the encoding of windisk info. by default it is `cp936`.
>
  windisk_encoding = 'cp936'
<

==============================================================================
WINDOWS_INDEX_TYPE                       *SpaceVim-options-windows_index_type*

Set SpaceVim windows index type, default is 3.
>
  # types:
  # 0: 1 ➛ ➊
  # 1: 1 ➛ ➀
  # 2: 1 ➛ ⓵
  # 3: 1 ➛ 1
  windows_index_type = 1
<

==============================================================================
WINDOWS_LEADER                               *SpaceVim-options-windows_leader*

Window functions leader for SpaceVim. Default is `s`. Set to empty to disable
this feature, or you can set to another char.
>
  windows_leader = ""
<

==============================================================================
WINDOWS_SMARTCLOSE                       *SpaceVim-options-windows_smartclose*

Set the default key for smart close windows, default is `q`. to disable this
feature, just set it to empty string:
>
  windows_smartclose = ""
<

==============================================================================
CONFIGURATION                                                *SpaceVim-config*

If you still want to use `~/.SpaceVim.d/init.vim` as configuration file,
please take a look at the following options add |SpaceVim-functions|

                                                          *g:spacevim_version*
Version of SpaceVim , this value can not be changed.

                                                   *g:spacevim_default_indent*
Change the default indentation of SpaceVim. Default is 2.
>
  let g:spacevim_default_indent = 2
<

                                                       *g:spacevim_expand_tab*
In Insert mode: Use the appropriate number of spaces to insert a <Tab>

                                                   *g:spacevim_relativenumber*
Enable/Disable relativenumber in current windows, by default it is enabled.

                                                        *g:spacevim_wrap_line*
Enable/Disable line wrap of vim

                                               *g:spacevim_enable_bepo_layout*
Enable/Disable bepo layout, by default it is disabled.

                                                       *g:spacevim_max_column*
Change the max number of columns for SpaceVim. Default is 120.
>
  let g:spacevim_max_column = 120
<

                                            *g:spacevim_default_custom_leader*
Change the default custom leader of SpaceVim. Default is <Space>.
>
  let g:spacevim_default_custom_leader = '<Space>'
<

                                                *g:spacevim_home_files_number*
Change the list number of files for SpaceVim home. Default is 6.
>
  let g:spacevim_home_files_number = 6
<

                                                *g:spacevim_code_runner_focus*
enable/disable code runner window focus mode, by default this option is 0, to
enable this mode, set this option to 1.

                                                 *g:spacevim_enable_guicolors*
Enable true color support in terminal. Default is 0.
>
  let g:spacevim_enable_guicolors = 1
<

                                               *g:spacevim_escape_key_binding*
Set the key binding for switch to normal mode in insert mode. Default is `jk`,
to disable this key binding, set this option to empty string.
>
  let g:spacevim_escape_key_binding = 'jk'
<

                                             *g:spacevim_enable_googlesuggest*
Enable/Disable Google suggestions for neocomplete. Default is 0.
>
  let g:spacevim_enable_googlesuggest = 1
<

                                                   *g:spacevim_windows_leader*
Window functions leader for SpaceVim. Default is `s`. Set to empty to disable
this feature, or you can set to another char.
>
  let g:spacevim_windows_leader = ''
<

                                                         *g:spacevim_data_dir*
Set the cache directory of SpaceVim. Default is `$XDG_CACHE_HOME`  or if not
set `~/.cache¸.
>
  let g:spacevim_data_dir = '~/.cache'
<

                                                *g:spacevim_plugin_bundle_dir*
Set the cache directory of plugins. Default is `$data_dir/vimfiles`.
>
  let g:spacevim_plugin_bundle_dir = g:spacevim_data_dir.'vimplugs'
<

                                            *g:spacevim_realtime_leader_guide*
Enable/Disable realtime leader guide. Default is 1. to disable it:
>
  let g:spacevim_realtime_leader_guide = 0
<

                                             *g:spacevim_enable_key_frequency*
Enable/Disable key frequency catching of SpaceVim. default value is 0. to
enable it:
>
  let g:spacevim_enable_key_frequency = 1
<

                                              *g:spacevim_autocomplete_method*
Set the autocomplete engine of spacevim, the default logic is:
>
  if has('python3')
    let g:spacevim_autocomplete_method = 'deoplete'
  elseif has('lua')
    let g:spacevim_autocomplete_method = 'neocomplete'
  elseif has('python')
    let g:spacevim_autocomplete_method = 'completor'
  elseif has('timers')
    let g:spacevim_autocomplete_method = 'asyncomplete'
  else
    let g:spacevim_autocomplete_method = 'neocomplcache'
  endif
<

and you can alse set this option to coc, then coc.nvim will be used.

                                                      *g:spacevim_lint_engine*
Set the lint engine used in checkers layer, the default engine is neomake, if
you want to use ale, use:
>
  let g:spacevim_lint_engine = 'ale'
<

                                                          *g:spacevim_guifont*
Set the guifont of SpaceVim. Default is empty.
>
  let g:spacevim_guifont = "SauceCodePro Nerd Font Mono:h11"
<

                                                       *g:spacevim_enable_ycm*
Enable/Disable YouCompleteMe. Default is 0.
>
  let g:spacevim_enable_ycm = 1
<

                                                    *g:spacevim_sidebar_width*
Set the width of the SpaceVim sidebar. Default is 30. This value will be used
by tagbar and filetree.

                                                   *g:spacevim_snippet_engine*
Set the snippet engine of SpaceVim, default is neosnippet. to enable
ultisnips:
>
  let g:spacevim_snippet_engine = "ultisnips"
<

                                                *g:spacevim_enable_cursorline*
Enable/Disable cursorline. Default is 1, cursorline will be highlighted in
normal mode.To disable this feature:
>
  let g:spacevim_enable_cursorline = 0
<

                                             *g:spacevim_statusline_separator*
Set the statusline separators of statusline, default is 'nil'
>
  Separators options:
    1. arrow
    2. curve
    3. slant
    4. nil
    5. fire
<

See more details in: http://spacevim.org/documentation/#statusline


                                            *g:spacevim_statusline_iseparator*
Set the statusline separators of statusline in inactive windows, default is
'nil'
>
  Separators options:
    1. arrow
    2. curve
    3. slant
    4. nil
    5. fire
<

See more details in: http://spacevim.org/documentation/#statusline


                                         *g:spacevim_enable_statusline_bfpath*
Enable/Disable showing full path of current buffer on statusline, disabled by
default, to enable this feature:
>
  enable_statusline_bfpath = true
<

                                            *g:spacevim_enable_statusline_tag*
Enable/Disable showing current tag on statusline

                                                  *g:spacevim_statusline_left*
Define the left section of statusline in active windows. By default:
>
  let g:spacevim_statusline_left =
    \ [
    \ 'winnr',
    \ 'filename',
    \ 'major mode',
    \ 'minor mode lighters',
    \ 'version control info'
    \ ]
<
`g:spacevim_statusline_left_sections` is deprecated, use
`g:spacevim_statusline_left` instead.

                                                 *g:spacevim_statusline_right*
Define the right section of statusline in active windows. By default:
>
  g:spacevim_statusline_right =
    \ [
    \ 'fileformat',
    \ 'cursorpos',
    \ 'percentage'
    \ ]
<

`g:spacevim_statusline_right_sections` is deprecated, use
`g:spacevim_statusline_right` instead.

                                               *g:spacevim_statusline_unicode*
Enable/Disable unicode symbols in statusline, includes the mode icons and
fileformat icons. This option is enabled by default, to disable it:
>
  let g:spacevim_statusline_unicode = 0
<

                                  *g:spacevim_enable_language_specific_leader*
Enable/Disable language specific leader, by default you can use `,` ket
instead of `SPC` `l`.

                                           *g:spacevim_enable_statusline_mode*
Enable/Disable display mode. Default is 0, mode will be displayed in
statusline. To enable this feature:
>
  let g:spacevim_enable_statusline_mode = 1
<

                                             *g:spacevim_custom_color_palette*
Set the statusline/tabline palette of color, default values depends on the
theme
>
  let g:spacevim_custom_color_palette = [
    \ ['#282828', '#b8bb26', 246, 235],
    \ ['#a89984', '#504945', 239, 246],
    \ ['#a89984', '#3c3836', 237, 246],
    \ ['#665c54', 241],
    \ ['#282828', '#83a598', 235, 109],
    \ ['#282828', '#fe8019', 235, 208],
    \ ['#282828', '#8ec07c', 235, 108],
    \ ['#282828', '#689d6a', 235, 72],
    \ ['#282828', '#8f3f71', 235, 132],
    \ ]
<


                                              *g:spacevim_enable_cursorcolumn*
Enable/Disable cursorcolumn. Default is 0, cursorcolumn will be highlighted in
normal mode. To enable this feature:
>
  let g:spacevim_enable_cursorcolumn = 1
<

                                                     *g:spacevim_error_symbol*
Set the error symbol for SpaceVim's syntax maker. Default is '✖'.
>
  let g:spacevim_error_symbol = '+'
<

                                                   *g:spacevim_warning_symbol*
Set the warning symbol for SpaceVim's syntax maker. Default is '⚠'.
>
  let g:spacevim_warning_symbol = '!'
<

                                                      *g:spacevim_info_symbol*
Set the information symbol for SpaceVim's syntax maker. Default is '🛈'.
>
  let g:spacevim_info_symbol = 'i'
<

                                            *g:spacevim_terminal_cursor_shape*
Set the SpaceVim cursor shape in the terminal.
>
  0 : to prevent Nvim from changing the cursor shape.
  1 : to enable non-blinking mode-sensitive cursor.
  2 : to enable blinking mode-sensitive cursor (default).
<

>
<
Host terminal must support the DECSCUSR CSI escape sequence. Depending on the
terminal emulator, using this option with nvim under tmux might require adding
the following to ~/.tmux.conf:
>
  set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
<

                                                *g:spacevim_vim_help_language*
Set the help language of vim. Default is 'en'. You can change it to Chinese.
>
  let g:spacevim_vim_help_language = 'cn'
<

                                                         *g:spacevim_language*
Set the message language of vim. Default is 'en_US.UTF-8'.
>
  let g:spacevim_language = 'en_CA.utf8'
<

                                                *g:spacevim_keep_server_alive*
Option for keep the spacevim server ailive

                                                      *g:spacevim_colorscheme*
The colorscheme of SpaceVim. Default is 'gruvbox'.

                                                   *g:spacevim_colorscheme_bg*
The background of colorscheme. Default is 'dark'.

                                              *g:spacevim_colorscheme_default*
The default colorscheme of SpaceVim. Default is 'desert'. This colorscheme
will be used if the colorscheme set by `g:spacevim_colorscheme` is not
installed.
>
  let g:spacevim_colorscheme_default = 'other_color'
<

                                                      *g:spacevim_filemanager*
The default file manager of SpaceVim. Default is 'nerdtree'. you can also use
defx or vimfiler

                                               *g:spacevim_filetree_direction*
Config the direction of file tree. Default is 'right'. you can also set to
'left'.

NOTE: if it is 'left', the tagbar will be move to right.

                                         *g:spacevim_plugin_manager_processes*
Set the max process of SpaceVim plugin manager

                                                     *g:spacevim_checkinstall*
Enable/Disable checkinstall on SpaceVim startup. Default is 1.
>
  let g:spacevim_checkinstall = 1
<

                                                    *g:spacevim_vimcompatible*
Enable/Disable vimcompatible mode, by default it is false. to enable
vimcompatible mode, just add:
>
  let g:spacevim_vimcompatible = 1
<
In vimcompatible mode all vim origin key bindings will not be changed.

Includes:
>
  q       smart quit windows
  s       windows key bindings leader
  ,       language specific leader
  <C-a>   move cursor to beginning in command line mode
  <C-b>   move cursor to left in command line mode
  <C-f>   move cursor to right in command line mode
  <C-x>   switch buffer
<

                                                     *g:spacevim_enable_debug*
Enable/Disable debug mode for SpaceVim. Default is 0.
>
  let g:spacevim_enable_debug = 1
<

                                            *g:spacevim_auto_disable_touchpad*
Auto disable touchpad when switch to insert mode or focuslost in neovim.

                                                      *g:spacevim_debug_level*
Set the debug level of SpaceVim. Default is 1. see
|SpaceVim#logger#setLevel()|

                                                *g:spacevim_buffer_index_type*
Set SpaceVim buffer index type, default is 4.
>
  " types:
  " 0: 1 ➛ ➊
  " 1: 1 ➛ ➀
  " 2: 1 ➛ ⓵
  " 3: 1 ➛ ¹
  " 4: 1 ➛ 1
  let g:spacevim_buffer_index_type = 1
<

                                               *g:spacevim_windows_index_type*
Set SpaceVim windows index type, default is 3.
>
  " types:
  " 0: 1 ➛ ➊
  " 1: 1 ➛ ➀
  " 2: 1 ➛ ⓵
  " 3: 1 ➛ 1
  let g:spacevim_windows_index_type = 1
<

                                           *g:spacevim_enable_tabline_ft_icon*
Enable/Disable tabline filetype icon. default is 0.

                                        *g:spacevim_enable_os_fileformat_icon*
Enable/Disable os fileformat icon. default is 0.

                                                  *g:spacevim_github_username*
Set the github username, It will be used for getting your starred repos, and
fuzzy find the repo you want.

                                               *g:spacevim_windows_smartclose*
Set the default key for smart close windows, default is `q`.

                                                 *g:spacevim_disabled_plugins*
Disable plugins by name.
>
  let g:spacevim_disabled_plugins = ['vim-foo', 'vim-bar']
<

                                                   *g:spacevim_custom_plugins*
Add custom plugins.
>
  let g:spacevim_custom_plugins = [
              \ ['plasticboy/vim-markdown', 'on_ft' : 'markdown'],
              \ ['wsdjeg/GitHub.vim'],
              \ ]
<

                                                   *g:spacevim_filetype_icons*
change the default filetype icon for a specific filtype.
>
  let g:spacevim_filetype_icons['md'] = ''
<

                                              *g:spacevim_force_global_config*
SpaceVim will load the global config after local config if set to 1. Default
is 0. If you have a local config, the global config will not be loaded.
>
  let g:spacevim_force_global_config = 1
<

                                           *g:spacevim_enable_powerline_fonts*
Enable/Disable powerline symbols. Default is 1.

                                                     *g:spacevim_lint_on_save*
Enable/Disable lint on save feature of SpaceVim's maker. Default is 1.
>
  let g:spacevim_lint_on_save = 0
<

                                                     *g:spacevim_search_tools*
Default search tools supported by flygrep. The default order is ['rg', 'ag',
'pt', 'ack', 'grep', 'findstr', 'git']

                                          *g:spacevim_project_rooter_patterns*
Set the project root patterns, SpaceVim determines the root directory of the
project based on this option. By default it is:
>
  ['.git/', '_darcs/', '.hg/', '.bzr/', '.svn/']
<

                                            *g:spacevim_enable_projects_cache*
Enable/Disable cross session projects cache. Enabled by default.

                                               *g:spacevim_projects_cache_num*
Setting the numbers of cached projects, by default it is 20.

                                                *g:spacevim_project_auto_root*
Enable/Disable changing directory automatically. Enabled by default.

                                         *g:spacevim_project_rooter_outermost*
Enable/Disable finding outermost directory for project root detection. By
default SpaceVim will find the outermost directory based on
`project_rooter_patterns`. To find nearest directory, you need to disable this
option:
>
  let g:spacevim_project_rooter_outermost = 0
<

                                               *g:spacevim_commandline_prompt*
Config the command line prompt for flygrep and denite etc.

                                                      *g:spacevim_todo_labels*
Option for setting todo labels in current project.

                                                  *g:spacevim_lint_on_the_fly*
Enable/Disable lint on the fly feature of SpaceVim's maker. Default is 0.
>
  let g:spacevim_lint_on_the_fly = 0
<

                                                 *g:spacevim_update_retry_cnt*
Set the number of retries for SpaceVim Update when failed. Default is 3. Set
to 0 to disable this feature, or you can set to another number.
>
  let g:spacevim_update_retry_cnt = 3
<

                                          *g:spacevim_enable_vimfiler_welcome*
Enable/Disable vimfiler in the welcome windows. Default is 1. This will cause
vim to start up slowly if there are too many files in the current directory.
>
  let g:spacevim_enable_vimfiler_welcome = 0
<

                                              *g:spacevim_autocomplete_parens*
Enable/Disable autocompletion of parentheses, default is 1 (enabled).

                                                        *g:spacevim_hosts_url*
The host file url. This option is for Chinese users who can not use Google and
Twitter.

                                                     *g:github_issues_no_omni*
jaxbot/github-issues.vim {{{ Disable completion by github-issues.vim. Because
github-complete.vim provides more powerful completion.

                                                          *g:github_dashboard*
junegunn/vim-github-dashboard {{{

                                                                  *g:dash_map*
rizzatti/dash.vim {{{ Allows configuration of mappings between Vim filetypes
and Dash's docsets.

==============================================================================
COMMANDS                                                   *SpaceVim-commands*

:SPLayer {layers}                                                   *:SPLayer*
  Load exist layer, {layers} can be a string of a layer name, or a list of
  layer names.

:SPVersion                                                        *:SPVersion*
  Print the version of SpaceVim.  The following lines contain information
  about which features were enabled.  When there is a preceding '+', the
  feature is included, when there is a '-' it is excluded.

:SPSet {opt} [value]                                                  *:SPSet*
  Set or check SpaceVim option. {opt} should be the option name of spacevim,
  This command will use [value] as the value of option name.

:SPDebugInfo[!]                                                 *:SPDebugInfo*
  print the debug information of spacevim, [!] forces the output into a new
  buffer.

:SPRuntimeLog                                                  *:SPRuntimeLog*
  view runtime log

:SPConfig                                                          *:SPConfig*
  edit custom config file of SpaceVim, by default this command will open
  global custom configuration file, '-l' option will load local custom
  configuration file.
>
    :SPConfig -g
<

:SPUpdate                                                          *:SPUpdate*
  Command for update plugin, support completion of plugin name. If run without
  argv, All the plugin will be updated.
>
      :SPUpdate vim-airline
<

:SPReinstall                                                    *:SPReinstall*
  Command for reinstall plugin, support completion of plugin name.

:SPInstall                                                        *:SPInstall*
  Command for install plugins.

:A[!] {type}                                                              *:A*
  Switch to alternate file based on {type}.

==============================================================================
PUBLIC FUNCTIONS                                          *SpaceVim-functions*

All of these functions can be used in `~/.SpaceVim.d/init.vim` and bootstrap
functions.

SpaceVim#api#import({name})                            *SpaceVim#api#import()*
  Import API base the given {name}, and return the API object. for all
  available APIs please check |spacevim-api|

SpaceVim#api#register({name}, {api})                 *SpaceVim#api#register()*
  Register new {api} named {name}, 1 will be returned if succeed. for all
  available APIs please check |spacevim-api|

  Example:
>
    let s:hello = {}
    function! s:hello.say(who)
      echo 'hello! ' . a:who
    endfunction
    call SpaceVim#api#register('hello', s:hello)

    " after registering api, you can use this api
    " in other vim scripts like this:
    let s:H = SpaceVim#api#import('hello')
    call s:H.say('wsdjeg')
<

SpaceVim#custom#SPC({m}, {keys}, {cmd}, {desc}, {is_cmd})
                                                       *SpaceVim#custom#SPC()*
  The first parameter sets the type of shortcut key, which can be `nnoremap`
  or `nmap`, the second parameter is a list of keys, and the third parameter
  is an ex command or key binding, depending on whether the last parameter is
  true. The fourth parameter is a short description of this custom key
  binding.

SpaceVim#custom#SPCGroupName({keys}, {name})  *SpaceVim#custom#SPCGroupName()*
  Set the group name of custom key bindings.

SpaceVim#custom#LangSPC({ft}, {m}, {keys}, {cmd}, {desc}, {is_cmd})
                                                   *SpaceVim#custom#LangSPC()*
  This function offers user a way to add custom language specific key
  bindings.

SpaceVim#custom#LangSPCGroupName({ft}, {keys}, {name})
                                          *SpaceVim#custom#LangSPCGroupName()*
  Set the group name of custom language specific key bindings.

SpaceVim#layers#load({layer})                         *SpaceVim#layers#load()*
  Load the {layer} you want. For all the layers SpaceVim supports, see
  |SpaceVim-layers|. the second argv is the layer variable. For example:
>
    call SpaceVim#layers#load('autocomplete',
      \ {
      \  'auto_completion_delay' : 50,
      \ }
      \ )
<

SpaceVim#logger#setLevel({level})                 *SpaceVim#logger#setLevel()*
  Set debug level of SpaceVim. Default is 1.

      1 : log all messages

      2 : log warning and error messages

      3 : log error messages only

SpaceVim#logger#setOutput({file})                *SpaceVim#logger#setOutput()*
  Set the log output file of SpaceVim. Default is empty.

SpaceVim#plugins#iedit#start([options], [firstline], [lastline])
                                              *SpaceVim#plugins#iedit#start()*
  This is public function to evoke iedit with [options]. The default
  [firstline] is 1, and the default [lastline] is `line('$')`. The following
  key are supported in [options]:
>
    KEY:
    expr     match expression
    word     match word
    stack    cursor pos stack
    selectall boolean
<
  if only argv 1 is given, use selected word as pattern

==============================================================================
LAYERS                                                       *SpaceVim-layers*

  Layers help collecting related packages together to provides features. This
approach helps keep configuration organized and reduces overhead for the user
by keeping them from having to think about what packages to install.

ENABLE LAYERS

By default SpaceVim enables these layers:

  1. `autocomplete`
  2. `checkers`
  3. `format`
  4. `edit`
  5. `ui`
  5. `core`
  6. `core#banner`
  7. `core#statusline`
  8. `core#tabline`

To enable a specific layer you need to edit SpaceVim's custom configuration
files. The key binding for opening the configuration files.s `SPC f v d`.

The following example shows how to load `shell` layer with some specified
options:
>
  [[layers]]
    name = 'shell'
    default_position = 'top'
    default_height = 30
<

DISABLE LAYERS

Some layers are enabled by default. The following example shows how to disable
`shell` layer:
>
  [[layers]]
    name = 'shell'
    enable = false
<

==============================================================================
CHINESE                                              *SpaceVim-layers-chinese*

`chinese` layer provides Chinese specific function for SpaceVim. This layer is
not loaded by default, to use this layer, add following snippet into your
SpaceVim configuration file.
>
  [[layers]]
    name = 'chinese'
<

KEY BINDINGS

>
  Key binding     Description
  SPC l c         check with ChineseLinter
  SPC x g t       translate current word
  SPC n c d       convert chinese number to digit
<


==============================================================================
VERSIONCONTROL                                *SpaceVim-layers-VersionControl*

This layer provides version control system (VCS) integration for SpaceVim.

KEY BINDINGS

>
  Key binding     Description
  SPC t m v       toggle version control info
  SPC t m h       toggle hunks summary
  SPC g .         version control transient state
<

==============================================================================
AUTOCOMPLETE                                    *SpaceVim-layers-autocomplete*

CODE COMPLETION
SpaceVim uses neocomplete as the default completion engine if vim has lua
support. If there is no lua support, neocomplcache will be used for the
completion engine. SpaceVim uses deoplete as the default completion engine for
neovim. Deoplete requires neovim to be compiled with python support. For more
information on python support, please read neovim's |provider-python|.

SpaceVim includes YouCompleteMe, but it is disabled by default. To enable ycm,
see |g:spacevim_enable_ycm|.

SNIPPET
SpaceVim use neosnippet as the default snippet engine. The default snippets
are provided by `Shougo/neosnippet-snippets`. For more information, please
read |neosnippet|. Neosnippet support custom snippets, and the default
snippets directory is `~/.SpaceVim/snippets/`. If
`g:spacevim_force_global_config = 1`, SpaceVim will not append
`./.SpaceVim/snippets` as default snippets directory.

==============================================================================
CHAT                                                    *SpaceVim-layers-chat*

The `chat` layer provides basic function to connected to chat server.

LAYER OPTIONS

  1. `chat_port`: set the port of chat server
  2. `chat_address`: set the ip of chat server
  3. `chat_client_jar`: set the path of client jar

KEY BINDINGS

>
  Key Bingding    Description
  SPC a h         open chat window
<

==============================================================================
CHECKERS                                            *SpaceVim-layers-checkers*

The `checkers` layer provides syntax lint feature. The default lint engine is
|neomake|, this can be changed by `lint_engine` option:
>
  [options]
    lint_engine = 'ale'
<

OPTIONS

`lint_on_the_fly`: Syntax checking on the fly feature, disabled by default.
`lint_on_save`: Run syntax checking when saving a file.
`show_cursor_error`: Enable/Disable displaying error below current line.
`lint_exclude_filetype`: Set the filetypes which does not enable syntax
  checking.

==============================================================================
COLORSCHEME                                      *SpaceVim-layers-colorscheme*

The ldefault colorscheme for SpaceVim is gruvbox. The colorscheme can be
changed with the `g:spacevim_colorscheme` option by adding the following line
to your `~/.SpaceVim/init.vim`.
>
  let g:spacevim_colorscheme = 'solarized'
<

The following colorschemes are include in SpaceVim. If the colorscheme you
want is not included in the list below, a PR is welcome.

Also, there's one thing which everyone should know and pay attention to. NOT
all of below colorschemes support spell check very well. For example, a
colorscheme called atom doesn't support spell check very well.

SpaceVim is not gonna fix them since these should be in charge of each author.

==============================================================================
CORE                                                    *SpaceVim-layers-core*

The `core` layer of SpaceVim. This layer is enabled by default, and it
provides filetree, comment key bindings etc.

OPTIONS
`filetree_show_hidden`: option for showing hidden file in filetree, disabled
  by default.
`enable_smooth_scrolling`: enable/disabled smooth scrolling key bindings,
  enabled by default.
`enable_filetree_gitstatus`: enable/disable git status column in filetree.
`enable_filetree_filetypeicon`: enable/disable filetype icons in filetree.
`enable_netrw`: enable/disable netrw, disabled by default.

NOTE: the `enable_vimfiler_gitstatus` and `enable_filetree_gitstatus` option
has been deprecated. Use layer option instead.
*spacevim-options-enable_vimfiler_gitstatus*
*spacevim-options-enable_filetree_gitstatus*
*g:spacevim_enable_vimfiler_gitstatus* *g:spacevim_enable_filetree_gitstatus*
*g:spacevim_enable_vimfiler_filetypeicon*

==============================================================================
CORE#STATUSLINE                              *SpaceVim-layers-core-statusline*

This layer provides default statusline for SpaceVim If you want to use
airline's statusline, just disable this layer
>
  [[layers]]
    name = 'core#statusline'
    enable = false
<

==============================================================================
CORE#TABLINE                                    *SpaceVim-layers-core-tabline*

This layer provides default tabline for SpaceVim If you want to use airline's
tabline, just disable this layer
>
  [[layers]]
    name = "core#tabline"
    enable = false
<
LAYER OPTIONS

  1. `enable_default_mappings`: Enable/disable default key bindings. This is
enabled by default.

KEY BINDINGS

>
  Key binding          Description
  Ctrl-Shift-Right     Move current tabpage to the right
  Ctrl-Shift-Left      Move current tabpage to the left
<

==============================================================================
CSCOPE                                                *SpaceVim-layers-cscope*

`cscope` layer provides |cscope| integration for SpaceVim. To load this layer:
>
  [[layers]]
    name = 'cscope'
<
LAYER OPTIONS

The layer option can be used when loading the `cscope` layer, for example:
>
  [[layers]]
    name = 'cscope'
    auto_update = true
    open_quickfix = 0
<
  1. `auto_update`: Enable or disable automatic updating of the cscope
    database.
  2. `cscope_command`: set the command or path of `cscope` executable.
  3. `open_location`: enable/disable open location list after searching.
  4. `preload_path`: set the proload paths.

KEY BINDINGS

The following key bindings will be added when this layer is loaded.
>
  Key binding       Description
  SPC m c c         find functions called by this function
  SPC m c C         find functions calling this function
  SPC m c d         find global definition of a symbol
  SPC m c r         find references of a symbol
  SPC m c f         find files
  SPC m c F         find files including this file
  SPC m c e         find this egrep pattern
  SPC m c t         find this text string
  SPC m c =         find assignments to this symbol
  SPC m c u         create cscope index
  SPC m c i         create cscope database
  SPC m c l         list cscope database
  SPC m c m         remove current cscope database
  SPC m c M         remove all cscope database
<

==============================================================================
CTRLP                                                  *SpaceVim-layers-ctrlp*

`ctrlp` layer provides fuzzy finder feature which is based on |ctrlp|. This
layer is not loaded by default, to use this layer, you need to add following
snippent in your configuration file.
>
  [[layers]]
    name = 'ctrlp'
<

KEY BINDINGS

The following key bindings will be defined when `ctrlp` layer is loaded:
>
   Key bindings         | Discription
   -------------------- | -----------------------------
   <Leader> f <Space>   | Fuzzy find menu:CustomKeyMaps
   <Leader> f e         | Fuzzy find register
   <Leader> f h         | Fuzzy find history/yank
   <Leader> f j         | Fuzzy find jump, change
   <Leader> f l         | Fuzzy find location list
   <Leader> f m         | Fuzzy find output messages
   <Leader> f o         | Fuzzy find outline
   <Leader> f q         | Fuzzy find quick fix
   <Leader> f r         | Resumes Unite window
<

==============================================================================
DEBUG                                                  *SpaceVim-layers-debug*

`debug` layer debug workflow for SpaceVim. All of the functionality is based
on vebugger or vimspector.

LAYER OPTIONS

  1. `debugger_plugin`: set the debug engine. It can be `vimspector` or
`vebugger`.

KEY BINDINGS

>
  Key binding     Description
  SPC d c               launch-or-continue-debugger
  SPC d r               restart-debugger-with-the-same-config
  SPC d x               run-to-cursor
  SPC d p               pause-debugger
  SPC d b               toggle-line-breakpoint
  SPC d B               clear-all-breakpoints
  SPC d o               step-over
  SPC d i               step-into-functions
  SPC d O               step-out-of-current-function
  SPC d u               move-up-a-frame
  SPC d d               move-down-a-frame
  SPC d k               terminate-the-debugger
  SPC d e               evaluate-cursor-symbol-or-selection
<

==============================================================================
EDIT                                                    *SpaceVim-layers-edit*

The `edit` layer provides basic feature for editing files. This layer is
loaded by default. To disable this layer:
>
  [[layers]]
    name = 'edit'
    enable = false
<
CONFIGURATION
  1. `autosave_timeout`: set the timeoutlen of autosave plugin. By default it
is 0. And autosave is disabled. timeoutlen must be given in millisecods and
can't be > 100*60*1000 (100 minutes) or < 1000 (1 second). For example, setup
timer with 5 minutes:
>
  [[layers]]
    name = 'edit'
    autosave_timeout = 300000
<
  2. `autosave_events`: set the events on which autosave will perform a save.
This option is an empty list by default. you can trigger saving based on vim's
events, for example:
>
  [[layers]]
    name = 'edit'
    autosave_events = ['InsertLeave', 'TextChanged']
<
  3. `autosave_all_buffers`: By default autosave plugin only save current
    buffer.
If you want to save all buffers automatically. Set this option to `true`.
>
  [[layers]]
    name = 'edit'
    autosave_all_buffers = true
<
  4. `autosave_location`: set the directory where to save changed files. By
default it is empty string, that means saving to the original file. If this
option is not an empty string. files will me saved to that directory
automatically. and the format is:
>
  autosave_location/path+=to+=filename.ext.backup
<

==============================================================================
EXPRFOLD                                            *SpaceVim-layers-exprfold*

Fold code quickly according to expr.

Mappings:
>
  Key         Mode            Function
  ----------------------------------------------------
  ZB          normal          Open fold block template
  ZF          normal          Fold block
  ZC          normal          Fold block comment
<

==============================================================================
FOLDSEARCH                                        *SpaceVim-layers-foldsearch*

`foldsearch` layer provides key bindings to searching text and fold searching
results. This layer is not enabled by default, to enable this layer, add
following code to your configuration file:
>
  [[layers]]
    name = 'foldsearch'
<
KEY BINDINGS

The following key bindings will be definded when the `foldsearch` layer is
loaded.
>
  Key Binding   Description
  SPC F w       searching with input word
  SPC F W       searching with cursor word
  SPC F p       searching with regexp
  SPC F e       end foldsearch
<

==============================================================================
FORMAT                                                *SpaceVim-layers-format*

`format` layer provides code formation for SpaceVim, the default formatting
plugin is `neoformat`, and you can also use `vim-codefmt`.

LAYER OPTIONS

  1. `format_on_save`: disabled by default.
  2. `format_method`: set the format plugin, default plugin is `neoformat`.
You can also use `vim-codefmt`.
  3. `silent_format`: Runs the formatter without any messages.

KEY BINDINGS

>
  Key binding     Description
  SPC b f         format current buffer or selection lines
<


==============================================================================
FZF                                                      *SpaceVim-layers-fzf*

This layer provides fuzzy finder feature which is based on `fzf`. This layer
is not loaded by default. To use this layer:
>
  [[layers]]
    name = 'fzf'
<
KEY BINDINGS

The following key bindings will be enabled when this layer is loaded:
>
  Key bindings      Description
  SPC p f / Ctrl-p  search files in current directory
  <Leader> f SPC    Fuzzy find menu:CustomKeyMaps
  <Leader> f e      Fuzzy find register
  <Leader> f h      Fuzzy find history/yank
  <Leader> f j      Fuzzy find jump, change
  <Leader> f l      Fuzzy find location list
  <Leader> f m      Fuzzy find output messages
  <Leader> f o      Fuzzy find functions
  <Leader> f t      Fuzzy find tags
  <Leader> f q      Fuzzy find quick fix
  <Leader> f p      Fuzzy find bundle plugins
<

==============================================================================
GIT                                                      *SpaceVim-layers-git*

`git` layer provides git integration for SpaceVim.

LAYER OPTIONS

`git_plugin`: Set the background plugin used in `git` layer. The default value
is `git`, the following plugins are supported: `gina`, `fugitive` and `gita`.
>
  [[layers]]
    name = 'git'
    git_plugin = 'git'
<
`git_diff_position`: set the default command to split diff windows, by default
it is `10split`. Example:
>
  [[layers]]
    name = 'git'
    git_diff_position = 'vsplit'
<
KEY BINDINGS

The following key bindings will be definded when the `git` layer is loaded.
>
  Key Binding   Description
  SPC g s       view git status
  SPC g S       stage current file
  SPC g U       unstage current file
  SPC g c       edit git commit
  SPC g p       git push
  SPC g m       git branch manager
  SPC g d       view git diff
  SPC g A       stage all files
  SPC g b       open git blame windows
  SPC g h a     stage current hunk
  SPC g h r     undo cursor hunk
  SPC g h v     preview cursor hunk
<

==============================================================================
GITHUB                                                *SpaceVim-layers-github*

This layer provides GitHub integration for SpaceVim

MAPPINGS

>
  Mode      Key           Function
  -------------------------------------------------------------
  normal    SPC g h i     show issues
  normal    SPC g h a     show activities
  normal    SPC g h d     show dashboard
  normal    SPC g h f     show current file in browser
  normal    SPC g h I     show issues in browser
  normal    SPC g h p     show PRs in browser
<

NOTE: If you are using python2, you may get error:
>
   No module named past.builtins
<

To fix this issue, you need to install `future` module.
>
  python2 -m pip install future
<

==============================================================================
GTAGS                                                  *SpaceVim-layers-gtags*

`gtags` layer provides |gtags| integration for SpaceVim. To load this layer:
>
  [[layers]]
    name = 'gtags'
<
LAYER OPTIONS

The layer option can be used when loading the `gtags` layer, for example:
>
  [[layers]]
    name = 'gtags'
    auto_update = true
    open_quickfix = 0
<
  1. `auto_update`: enable/disable database update automatically.
  2. `open_quickfix`: This setting will open the |quickfix| list when
adding entries. same as |g:gtags_open_list|
  3. `gtagslabel`: the backend of gtags command, you can use `ctags` or
`pygments`. It is empty string by default.
  4. `ctags_bin`: set the command or path of ctags, default is 'ctags'

==============================================================================
INCSEARCH                                          *SpaceVim-layers-incsearch*

This layer improved incremental searching for neovim/vim

KEY BINDINGS

The following key bindings will be defined when this layer is loaded.
>
  key binding     description
  /               incsearch forward
  ?               incsearch backward
  g/              incsearch stay
  n               nohlsearch n
  N               nohlsearch N
  *               nohlsearch *
  #               nohlsearch #
  g*              nohlsearch g*
  g#              nohlsearch g#
  SPC b /         fuzzy find word
<

==============================================================================
INDENTMOVE                                        *SpaceVim-layers-indentmove*

Move cursor quickly according to indent.

MAPPINGS

>
  Key         mode            function
  -----------------------------------------------------------------
  EH          normal/visual   move up to nearest line with smaller
                              indent level
  EL          normal/visual   move down to nearest line with larger
                              indent level
  EJ          normal/visual   move down to nearest line with smaller
                              or same indent level
  EK          normal/visual   move down to nearest line with larger
                              or same indent level
  EI          normal/visual   move down to nearest child indent
<



==============================================================================
LANG#WEBASSEMBLY                            *SpaceVim-layers-lang-WebAssembly*

This layer provides syntax highlighting for WebAssembly file. and it is
disabled by default, to enable this layer, add following snippet to your
SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#WebAssembly'
<


==============================================================================
LANG#ACTIONSCRIPT                          *SpaceVim-layers-lang-actionscript*

This layer provides syntax highlighting for actionscript. To enable this
layer:
>
  [[layers]]
    name = "lang#actionscript"
<

==============================================================================
LANG#AGDA                                          *SpaceVim-layers-lang-agda*

This layer provides syntax highlighting for agda. To enable this layer:
>
  [layers]
    name = "lang#agda"
<

KEY BINDINGS

The following key bindings will be added when this layer is loaded. All key
bindings start with `SPC l`.


>
  Key binding Description
  SPC l r     execute current file
  SPC l l     reload
  SPC l t     infer
  SPC l f     refine false
  SPC l F     refine true
  SPC l g     give
  SPC l c     make case
  SPC l a     auto
  SPC l e     context
  SPC l n     Normalize IgnoreAbstract
  SPC l N     Normalize DefaultCompute
  SPC l M     Show module
  SPC l y     why in scope
  SPC l h     helper function
  SPC l m     metas
<

==============================================================================
LANG#ASCIIDOC                                  *SpaceVim-layers-lang-asciidoc*

This layer provides syntax highlighting for asciidoc. To enable this layer:
>
  [layers]
    name = "lang#asciidoc"
<

==============================================================================
LANG#ASEPCTJ                                    *SpaceVim-layers-lang-asepctj*

This layer provides syntax highlighting for asepctj. To enable this layer:
>
  [layers]
    name = "lang#asepctj"
<

==============================================================================
LANG#ASSEMBLY                                  *SpaceVim-layers-lang-assembly*

This layer provides syntax highlighting for assembly. To enable this layer:
>
  [layers]
    name = "lang#assembly"
<

==============================================================================
LANG#AUTOHOTKEY                              *SpaceVim-layers-lang-autohotkey*

This layer provides syntax highlighting for autohotkey. To enable this layer:
>
  [layers]
    name = "lang#autohotkey"
<

==============================================================================
LANG#AUTOIT                                      *SpaceVim-layers-lang-autoit*

This layer provides syntax highlighting for autoit. To enable this layer:
>
  [layers]
    name = "lang#autoit"
<

KEY BINDINGS
The following key binding will be added when this layer is loaded:
>
  key binding   Description
  SPC l r       run current file
<

==============================================================================
LANG#BATCH                                        *SpaceVim-layers-lang-batch*

This layer is for batch development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#batch'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for batch, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#C                                                *SpaceVim-layers-lang-c*

This layer is for c/cpp development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#c'
<

LAYER OPTIONS

`clang_executable`: Set the path to the clang executable, by default, it is
`clang`.

`enable_clang_syntax_highlight`: Enable/Disable clang based syntax
highlighting. By default it is disabled.

`libclang_path`: The libclang shared object (dynamic library) file path. By
default it is empty

`clang_std`: This is a dictionary for setting std for c/cpp. The default
valuable is :
>
  'c'     : 'c11',
  'cpp'   : 'c++1z',
  'objc'  : 'c11',
  'objcpp': 'c++1z',
<

`clang_flag`: You should be able to just paste most of your compile flags in
there.

Here is an example how to use above options:
>
  [[layers]]
    name = "lang#c"
    clang_executable = "/usr/bin/clang"
    clang_flag = ['-I/user/include']
    [layers.clang_std]
      c = "c11"
      cpp = "c++1z"
      objc = "c11"
      objcpp = "c++1z"
<

Instead of using `clang_flag` options, You can also create a `.clang` file in
the root directory of your project. SpaceVim will load the options defined in
`.clang` file. For example:
>
  -std=c11
  -I/home/test
<
Note: If `.clang` file contains std configuration, it will override
`clang_std` layer option.

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for c, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<

Known issue:

You need to use `flush(stdout)` before `scanf()` when run code in code runner.

}}}

==============================================================================
LANG#CHAPEL                                      *SpaceVim-layers-lang-chapel*

This layer is for chapel development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#chapel'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         compile and run current file
<


==============================================================================
LANG#CLOJURE                                    *SpaceVim-layers-lang-clojure*

This layer provides clojure language support in SpaceVim. Including syntax
highlighting, code indent, code runner and REPL. This layer is not enabled by
default, To enable this layer:
>
  [layers]
    name = "lang#clojure"
<

LAYER OPTIONS

  1. `clojure_interpreter`: Set the clojure interpreter, by default, it is
`clojure`
>
  [[layers]]
    name = 'lang#clojure'
    clojure_interpreter = 'path/to/clojure'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for clojure, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#COFFEESCRIPT                          *SpaceVim-layers-lang-coffeescript*

This layer is for coffeescript development, disabled by default, to enable
this layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#coffeescript'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for coffeescript, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<

==============================================================================
LANG#CRYSTAL                                    *SpaceVim-layers-lang-crystal*

INTRO

The lang#crystal layer provides crystal filetype detection and syntax
highlight, crystal tool and crystal spec integration. To enable this layer:
>
  [layers]
    name = "lang#crystal"
<

MAPPING

>
  Key binding       description
  SPC l r           run current code

<
This layer also provides REPL support for crystal, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#CSHARP                                      *SpaceVim-layers-lang-csharp*

INTRO

This layer includes utilities and language-specific mappings for csharp
development. By default it is disabled, to enable this layer:
>
  [layers]
    name = "lang#csharp"
<

KEY MAPPINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l b         compile the project
  normal          SPC l f         format current file
  normal          SPC l d         show doc
  normal          SPC l e         rename symbol under cursor
  normal          SPC l g g       go to definition
  normal          SPC l g i       find implementations
  normal          SPC l g t       find type
  normal          SPC l g s       find symbols
  normal          SPC l g u       find usages of symbol under cursor
  normal          SPC l g m       find members in the current buffer
  normal          SPC l s r       reload the solution
  normal          SPC l s s       start the OmniSharp server
  normal          SPC l s S       stop the OmniSharp server
<

==============================================================================
LANG#D                                                *SpaceVim-layers-lang-d*

This layer is for d development, disabled by default, to enable this layer,
add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#d'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for d, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#DART                                          *SpaceVim-layers-lang-dart*

INTRO

The lang#dart layer provides code completion, documentation lookup, jump to
definition, dart_repl integration for dart. It uses neomake as default syntax
checker which is loaded in |SpaceVim-layer-checkers|. To enable this layer:
>
  [layers]
    name = "lang#dart"
<

LAYER OPTIONS

  1. `dart_sdk_path`: Set the path of dart sdk, by default, it is ''.

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for hack, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<

This layer use deoplete-dart as default completion plugin for dart. If the
|SpaceVim-layer-lsp| is enabled for dart, This plugin will not be loaded.



==============================================================================
LANG#DOCKERFILE                              *SpaceVim-layers-lang-dockerfile*

INTRO

The lang#dockerfile layer provides syntax highlighting for dockerfile.

==============================================================================
LANG#E                                                *SpaceVim-layers-lang-e*

INTRO

This layer includes utilities and language-specific mappings for e
development. By default it is disabled, to enable this layer:
>
  [layers]
    name = "lang#e"
<

==============================================================================
LANG#EIFFEL                                      *SpaceVim-layers-lang-eiffel*

This layer is for lang#eiffel development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#eiffel'
<

KEY BINDINGS

>
  Key             Function
  -----------------------------
  SPC l c         run eclean
<


==============================================================================
LANG#ELIXIR                                      *SpaceVim-layers-lang-elixir*

This layer is for elixir development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#elixir'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
  normal          g d             jump to definition
<

This layer also provides REPL support for d, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#ELM                                            *SpaceVim-layers-lang-elm*

This layer is for elm development, disabled by default, to enable this layer,
add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#elm'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for elm, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#ERLANG                                      *SpaceVim-layers-lang-erlang*

This layer is for erlang development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#erlang'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for erlang, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#EXTRA                                        *SpaceVim-layers-lang-extra*

INTRO

The lang#extra layer provides syntax highlighting, indent for extra
programming language. includes:

  1. pug

    digitaltoad/vim-pug syntax highlighting and indent

  2. i3config

    PotatoesMaster/i3-vim-syntax syntax highlighting for i3 config

  3. irssi config

    isundil/vim-irssi-syntax syntax highlighting for irssi config

==============================================================================
LANG#FENNEL                                      *SpaceVim-layers-lang-fennel*

This layer is for fennel development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#fennel'
<

LAYER OPTIONS

  1. `fennel_interpreter`: Set the path of `fennel` command,
by default it is `fennel`.

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for fennel, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#FORTH                                        *SpaceVim-layers-lang-forth*

This layer is for forth development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#forth'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<


==============================================================================
LANG#FORTRAN                                    *SpaceVim-layers-lang-fortran*

This layer is for fortran development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#fortran'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for fortran, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#FOXPRO                                      *SpaceVim-layers-lang-foxpro*

INTRO

The lang#foxpro layer provides syntax highlighting for foxpro.

==============================================================================
LANG#FSHARP                                      *SpaceVim-layers-lang-fsharp*

This layer is for fsharp development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#fsharp'
<

This layer also provides REPL support for goby, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#GO                                              *SpaceVim-layers-lang-go*

The `lang#go` layer includes code completion and syntax checking for Go
development. This layer is not enabled by default, to enable it:
>
  [[layers]]
    name = 'go'
<
LAYER OPTIONS
  1. `enabled_linters`: set a list of enabled lint for golang. by default this
option is `['golint']`. The available linters includes: `go`, `gometalinter`
  2. go_file_head: the default file head for golang source code.

>
  [layers]
    name = "lang#go"
    go_file_head = [
      '#!/usr/bin/python3',
      '# -*- coding : utf-8 -*-'
      ''
    ]
<
  3. `go_interpreter`: Set the interpreter of go.

>
  [[layers]]
    name = 'lang#go'
    go_interpreter = '~/download/bin/go'
<
  4. format_on_save: enable/disable code formation when save go file. This
options is disabled by default, to enable it:
>
  [[layers]]
    name = 'lang#go'
    format_on_save = true
<

MAPPINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l a         go alternate
  normal          SPC l b         go build
  normal          SPC l c         go coverage
  normal          SPC l d         go doc
  normal          SPC l D         go doc vertical
  normal          SPC l e         go rename
  normal          SPC l g         go definition
  normal          SPC l G         go generate
  normal          SPC l h         go info
  normal          SPC l i         go implements
  normal          SPC l I         implement stubs
  normal          SPC l k         add tags
  normal          SPC l K         remove tags
  normal          SPC l l         list declarations in file
  normal          SPC l L         list declarations in dir
  normal          SPC l m         format improts
  normal          SPC l M         add import
  normal          SPC l x         go referrers
  normal          SPC l s         fill struct
  normal          SPC l t         go test
  normal          SPC l v         freevars
  normal          SPC l r         go run
<
If the lsp layer is enabled for go, the following key bindings can be used:
>
  key binding     Description
  g D             jump to type definition
  SPC l e         rename symbol
  SPC l x         show references
  SPC l s         show line diagnostics
  SPC l d         show document
  K               show document
  SPC l w l       list workspace folder
  SPC l w a       add workspace folder
  SPC l w r       remove workspace folder
<

==============================================================================
LANG#GOBY                                          *SpaceVim-layers-lang-goby*

This layer is for goby development, disabled by default, to enable this layer,
add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#goby'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for goby, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#GOSU                                          *SpaceVim-layers-lang-gosu*

This layer is for gosu development, disabled by default, to enable this layer,
add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#gosu'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

==============================================================================
LANG#GRAPHQL                                    *SpaceVim-layers-lang-graphql*

INTRO

The lang#graphql layer provides syntax highlighting indent for graphql. To
enable this layer:
>
  [layers]
    name = "lang#graphql"
<

This filetype is automatically selected for filenames ending in .graphql,
.graphqls, and .gql. If you would like to enable automatic syntax support for
more file extensions (e.g., *.prisma), add following into bootstrap function.
>
    augroup mybootstrap
      au!
      au BufNewFile,BufRead *.prisma setfiletype graphql
    augroup END
<

==============================================================================
LANG#GROOVY                                      *SpaceVim-layers-lang-groovy*

This layer is for groovy development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#groovy'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for groovy, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#HACK                                          *SpaceVim-layers-lang-hack*

INTRO

This layer is for hack development, disabled by default, to enable this layer,
add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#hack'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for hack, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#HASKELL                                    *SpaceVim-layers-lang-haskell*

This layer is for haskell development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#haskell'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for haskell, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#HTML                                          *SpaceVim-layers-lang-html*

This layer is for html development, disabled by default, to enable this layer,
add following snippet to your SpaceVim configuration file.
>
  [layers]
    name = "lang#html"
<

OPTIONS

`emmet_leader_key`: change the default leader key for emmet
`emmet_filetyps`: Set the filetypes for enabling emmet

>
  [layers]
    name = "lang#html"
    emmet_leader_key = "<C-e>"
    emmet_filetyps = ['html']
<

KEY BINDINGS


>
    Key Binding       description
    <C-e>             emmet leader key
<


==============================================================================
LANG#HY                                              *SpaceVim-layers-lang-hy*

This layer is for hy development, disabled by default, to enable this layer,
add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#hy'
<

LAYER OPTIONS

  1. `hy_interpreter`: Set the hy interpreter, by default, it is `hy`

>
  [[layers]]
    name = 'lang#hy'
    hy_interpreter = 'path/to/hy'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for hy, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#IDRIS                                        *SpaceVim-layers-lang-idris*

This layer is for idris development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#idris'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for idris, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#IO                                              *SpaceVim-layers-lang-io*

This layer is for io development, disabled by default, to enable this layer,
add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#io'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for io, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#J                                                *SpaceVim-layers-lang-j*

This layer is for j development, disabled by default, to enable this layer,
add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#j'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for j, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#JANET                                        *SpaceVim-layers-lang-janet*

This layer is for janet development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#janet'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for janet, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#JAVA                                          *SpaceVim-layers-lang-java*

This layer is for java development, disabled by default, to enable this layer,
add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#java'
<
LAYER OPTIONS

  1. `format_on_save`: Enable/disabled code formatting when saving current
    file. Disabled by default.
  2. `java_formatter_jar`: Set the full path of google's java formatter jar.
  3. `java_file_head`: The default file header for new java file. by default
    it is:

>
  [[layers]]
    name = 'lang#java'
    java_file_head = [
      '/**',
      ' * @author : `fnamemodify(expand("~"), ":t")`',
      ' * @created : `strftime("%Y-%m-%d")`',
      '**/',
      ''
    ]
<
MAPPINGS

>
  Import key bindings:

  Mode      Key           Function
  -------------------------------------------------------------
  normal    SPC l I       import missing classes
  normal    SPC l R       remove unused imports
  normal    SPC l i       smart import class under cursor
  insert    <c-j>I        import missing imports
  insert    <c-j>R        remove unused imports
  insert    <c-j>i        smart import class under cursor

  Generate key bindings:

  Mode      Key           Function
  -------------------------------------------------------------
  normal    SPC l g A     generate accessors
  normal    SPC l g s     generate setter accessor
  normal    SPC l g g     generate getter accessor
  normal    SPC l g a     generate setter and getter accessor
  normal    SPC l g t     generate toString function
  normal    SPC l g e     generate equals and hashcode function
  normal    SPC l g c     generate constructor
  normal    SPC l g C     generate default constructor
  insert    <c-j>s        generate setter accessor
  insert    <c-j>g        generate getter accessor
  insert    <c-j>a        generate getter and setter accessor
  visual    SPC l g s     generate setter accessor
  visual    SPC l g g     generate getter accessor
  visual    SPC l g a     generate setter and getter accessor

  Maven key bindings:

  Mode      Key           Function
  -------------------------------------------------------------
  normal    SPC l m i     run maven clean install
  normal    SPC l m I     run maven install
  normal    SPC l m p     run one already goal from list
  normal    SPC l m r     run maven goals
  normal    SPC l m R     run one maven goal
  normal    SPC l m t     run maven test

  Gradle key bindings:

  Mode      Key           Function
  -------------------------------------------------------------
  normal    SPC l g r     run gradle run
  normal    SPC l g b     run gradle build
  normal    SPC l g B     run gradle clean build
  normal    SPC l g t     run gradle test

  Jump key bindings:

  Mode      Key           Function
  -------------------------------------------------------------
  normal    SPC l j a     jump to alternate file

  REPL key bindings:

  Mode      Key           Function
  -------------------------------------------------------------
  normal    SPC l s i     start a jshell inferior REPL process
  normal    SPC l s b     send buffer and keep code buffer focused
  normal    SPC l s l     send line and keep code buffer focused
  normal    SPC l s s     send selection text and keep code buffer focused
<
CODE FORMATTING
To make neoformat support java file, you should install uncrustify. or
download google's formater jar from:
https://github.com/google/google-java-format

and set the layer option `java_formatter_jar` to the path of the jar.
>
  [[layers]]
    name = 'lang#java'
    java_formatter_jar = 'path/to/google-java-format.jar'
<

==============================================================================
LANG#JAVASCRIPT                              *SpaceVim-layers-lang-javascript*

This layer is for JavaScript development, includes syntax lint, code
completion etc. To enable this layer:
>
  [layers]
    name = "lang#javascript"
<
The code linter is eslint, install eslint via:
>
  npm install -g eslint-cli
<
LAYER OPTION

  1. auto_fix: If this option is true, --fix will be added to neomake eslint
maker.
>
  [layers]
    name = "lang#javascript"
    auto_fix = true
<
KEY BINDINGS

>
  Key             Function
  -----------------------------
  SPC l r         run current file
  SPC b f         format current buffer
<

This layer also provides REPL support for javascript, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<
If the lsp layer is enabled for javascript, the following key bindings can be
used:
>
  key binding     Description
  g D             jump to type definition
  SPC l e         rename symbol
  SPC l x         show references
  SPC l h         show line diagnostics
  SPC l d         show document
  K               show document
  SPC l w l       list workspace folder
  SPC l w a       add workspace folder
  SPC l w r       remove workspace folder
<


==============================================================================
LANG#JR                                              *SpaceVim-layers-lang-jr*

This layer adds syntax highlighting for the JR Concurrent Programming
Language. JR is the implementation of the SR language for Java. It is disabled
by default, to enable this layer, add following snippet to your SpaceVim
configuration file.
>
  [[layers]]
    name = 'lang#jr'
<


==============================================================================
LANG#JSON                                          *SpaceVim-layers-lang-json*

This layer provides syntax highlighting for json file. To enable this layer:
>
  [layers]
    name = "lang#json"
<

OPTIONS

  1. conceal: Set the valuable for |g:vim_json_syntax_conceal|

  2. concealcursor: Set the valuable for |g:vim_json_syntax_concealcursor|


>
  [layers]
    name = 'lang#json'
    conceal = false
    concealcursor = ''
<

==============================================================================
LANG#JULIA                                        *SpaceVim-layers-lang-julia*

This layer is for julia development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#julia'
<

KEY BINDINGS

This layer brings following key bindings to julia file:
>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<
This layer also provides REPL support for julia, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<
To format julia code, you need to install `JuliaFormatter`, and the key
binding is `SPC b f`

If the lsp layer is enabled for python, the following key bindings can be
used:
>
  key binding     Description
  g D             jump to type definition
  SPC l e         rename symbol
  SPC l x         show references
  SPC l h         show line diagnostics
  SPC l d         show document
  K               show document
  SPC l w l       list workspace folder
  SPC l w a       add workspace folder
  SPC l w r       remove workspace folder
<

==============================================================================
LANG#KOTLIN                                      *SpaceVim-layers-lang-kotlin*

This layer is for kotlin development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#kotlin'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for kotlin, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#LATEX                                        *SpaceVim-layers-lang-latex*

This layer is for latex development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#latex'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l i         vimtex-info
  normal          SPC l I         vimtex-info-full
  normal          SPC l t         vimtex-toc-open
  normal          SPC l T         vimtex-toc-toggle
  normal          SPC l y         vimtex-labels-open
  normal          SPC l Y         vimtex-labels-toggle
  normal          SPC l v         vimtex-view
  normal          SPC l r         vimtex-reverse-search
  normal          SPC l l         vimtex-compile
  normal          SPC l L         vimtex-compile-selected
  normal          SPC l k         vimtex-stop
  normal          SPC l K         vimtex-stop-all
  normal          SPC l e         vimtex-errors
  normal          SPC l o         vimtex-compile-output
  normal          SPC l g         vimtex-status
  normal          SPC l G         vimtex-status-all
  normal          SPC l c         vimtex-clean
  normal          SPC l C         vimtex-clean-full
  normal          SPC l m         vimtex-imaps-list
  normal          SPC l x         vimtex-reload
  normal          SPC l X         vimtex-reload-state
  normal          SPC l s         vimtex-toggle-main
<

==============================================================================
LANG#LISP                                          *SpaceVim-layers-lang-lisp*

This layer is for Common Lisp development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#lisp'
<

KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current file
<

This layer also provides REPL support for lisp, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#LIVESCRIPT                              *SpaceVim-layers-lang-livescript*

This layer is for livescript development, disabled by default, to enable this
layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#livescript'
<

KEY BINDINGS

>
  Mode      Key           Function
  -------------------------------------------------------------
  normal    SPC l r       run current file
<

This layer also provides REPL support for livescript, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#LUA                                            *SpaceVim-layers-lang-lua*

This layer includes utilities and language-specific mappings for lua
development.
>
  [[layers]]
    name = 'lang#lua'
<

LAYER OPTIONS

  1. lua_file_head: the default file head for lua source code.

>
  [layers]
    name = "lang#lua"
    ruby_file_head = [
      '--!/usr/bin/lua',
      ''
    ]
<
  2. repl_command: the REPL command for lua

>
  [[layers]]
    name = 'lang#lua'
    repl_command = '~/download/bin/lua'
<
  3. format_on_save: enable/disable code formation when save lua file. This
options is disabled by default, to enable it:
>
  [[layers]]
    name = 'lang#lua'
    format_on_save = true
<
KEY BINDINGS

>
  Mode            Key             Function
  ---------------------------------------------
  normal          SPC l r         run current script
  normal          SPC l b         compile current file
<

This layer also provides REPL support for lua, the key bindings are:
>
  Key             Function
  ---------------------------------------------
  SPC l s i       Start a inferior REPL process
  SPC l s b       send whole buffer
  SPC l s l       send current line
  SPC l s s       send selection text
<


==============================================================================
LANG#MARKDOWN                                  *SpaceVim-layers-lang-markdown*

This layer adds markdown support to SpaceVim. It is disabled by default, to
enable this layer, add following snippet to your SpaceVim configuration file.
>
  [[layers]]
    name = 'lang#markdown'
<
LAYER OPTIONS

The following layer options are supported in this layer:

  1. `enabled_formater`: Set the enabled formater, by default it is
`['remark']`. To use `prettier`, you need to install `prettier` via:
>
  npm install --global prettier
<
