Execute ( SpaceVim api: job ):
  let job = SpaceVim#api#import('job')
  let os = SpaceVim#api#import('system')
  let g:stdout = ''
  let stderr = ''
  let exit_data = -1
  function! s:on_std(id, data, event) abort
    if a:event ==# 'stdout'
      for a in a:data
        if !empty(a)
          let g:stdout = a
        endif
      endfor
    elseif a:event ==# 'exit'
      let g:exit_data = a:data
    else
      let g:stderr = a:data
    endif
  endfunction
  let opt = {
    \ 'on_stdout' : function('s:on_std'),
    \ 'on_stderr' : function('s:on_std'),
    \ 'on_exit' : function('s:on_std'),
    \ }
  if executable('cat')
    let jobid = job.start(['cat'],opt)
    call job.send(jobid, 'foo')
    sleep 100m
    AssertEqual stdout, 'foo'
    call job.stop(jobid)
    sleep 100m
    AssertEqual exit_data, 0
  endif
  let jobid = job.start(['echo', 'foo'],opt)
  sleep 100m
  AssertEqual stdout, 'foo'
  AssertEqual exit_data, 0


