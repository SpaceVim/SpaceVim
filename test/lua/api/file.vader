Execute ( SpaceVim lua api: file.fticon(ft) ):
  let &encoding = 'utf-8'
  let file = SpaceVim#api#import('file')
  let cmp = SpaceVim#api#import('vim#compatible')
  AssertEqual cmp.luaeval('require("spacevim.api").import("file").fticon("foo.md")'), file.fticon('foo.md')
  AssertEqual cmp.luaeval('require("spacevim.api").import("file").fticon("foo.mdxx")'), file.fticon('foo.mdxx')

Execute ( SpaceVim lua api: file.unify_path(path, ...) ):
  let file = SpaceVim#api#import('file')
  let cmp = SpaceVim#api#import('vim#compatible')
  AssertEqual cmp.luaeval('require("spacevim.api").import("file").unify_path(".SpaceVim.d/init.vim", ":p")'), fnamemodify('.SpaceVim.d/init.vim', ':p:gs?[\\/]?/?')
  AssertEqual cmp.luaeval('string.sub(require("spacevim.api").import("file").unify_path("~/.SpaceVim.d/", ":p"), -1)'),  '/'
  AssertEqual cmp.luaeval('string.sub(require("spacevim.api").import("file").unify_path("autoload", ":p"), -1)'),  '/'

Execute ( SpaceVim lua api: file.path_to_fname(path) ):
  let file = SpaceVim#api#import('file')
  let cmp = SpaceVim#api#import('vim#compatible')
  AssertEqual cmp.luaeval('require("spacevim.api").import("file").path_to_fname(".SpaceVim.d/init.vim")'), file.path_to_fname('.SpaceVim.d/init.vim')

Execute ( SpaceVim lua api: file.findfile(what, where, ...) ):
  let file = SpaceVim#api#import('file')
  let cmp = SpaceVim#api#import('vim#compatible')
  AssertEqual cmp.luaeval('require("spacevim.api").import("file").path_to_fname(".SpaceVim.d/init.vim")'), file.path_to_fname('.SpaceVim.d/init.vim')
  AssertEqual cmp.luaeval('require("spacevim.api").import("file").finddir("doc/", "bundle/dein.vim/autoload/dein.vim")'), 'bundle/dein.vim/doc/'
